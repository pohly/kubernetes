//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1beta1

import (
	"unsafe"

	apicorev1 "k8s.io/api/core/v1"
	apiextensionsv1beta1 "k8s.io/api/extensions/v1beta1"
	apismetav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	apimachinerypkgconversion "k8s.io/apimachinery/pkg/conversion"
	apimachinerypkgruntime "k8s.io/apimachinery/pkg/runtime"
	pkgutilintstr "k8s.io/apimachinery/pkg/util/intstr"
	pkgapisapps "k8s.io/kubernetes/pkg/apis/apps"
	pkgapisautoscaling "k8s.io/kubernetes/pkg/apis/autoscaling"
	pkgapiscore "k8s.io/kubernetes/pkg/apis/core"
	apiscorev1 "k8s.io/kubernetes/pkg/apis/core/v1"
	pkgapisnetworking "k8s.io/kubernetes/pkg/apis/networking"
	pkgapispolicy "k8s.io/kubernetes/pkg/apis/policy"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *apimachinerypkgruntime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.AllowedCSIDriver)(nil), (*pkgapispolicy.AllowedCSIDriver)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_AllowedCSIDriver_To_policy_AllowedCSIDriver(a.(*apiextensionsv1beta1.AllowedCSIDriver), b.(*pkgapispolicy.AllowedCSIDriver), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapispolicy.AllowedCSIDriver)(nil), (*apiextensionsv1beta1.AllowedCSIDriver)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_policy_AllowedCSIDriver_To_v1beta1_AllowedCSIDriver(a.(*pkgapispolicy.AllowedCSIDriver), b.(*apiextensionsv1beta1.AllowedCSIDriver), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.AllowedFlexVolume)(nil), (*pkgapispolicy.AllowedFlexVolume)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_AllowedFlexVolume_To_policy_AllowedFlexVolume(a.(*apiextensionsv1beta1.AllowedFlexVolume), b.(*pkgapispolicy.AllowedFlexVolume), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapispolicy.AllowedFlexVolume)(nil), (*apiextensionsv1beta1.AllowedFlexVolume)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_policy_AllowedFlexVolume_To_v1beta1_AllowedFlexVolume(a.(*pkgapispolicy.AllowedFlexVolume), b.(*apiextensionsv1beta1.AllowedFlexVolume), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.AllowedHostPath)(nil), (*pkgapispolicy.AllowedHostPath)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_AllowedHostPath_To_policy_AllowedHostPath(a.(*apiextensionsv1beta1.AllowedHostPath), b.(*pkgapispolicy.AllowedHostPath), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapispolicy.AllowedHostPath)(nil), (*apiextensionsv1beta1.AllowedHostPath)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_policy_AllowedHostPath_To_v1beta1_AllowedHostPath(a.(*pkgapispolicy.AllowedHostPath), b.(*apiextensionsv1beta1.AllowedHostPath), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.DaemonSet)(nil), (*pkgapisapps.DaemonSet)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_DaemonSet_To_apps_DaemonSet(a.(*apiextensionsv1beta1.DaemonSet), b.(*pkgapisapps.DaemonSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.DaemonSet)(nil), (*apiextensionsv1beta1.DaemonSet)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_DaemonSet_To_v1beta1_DaemonSet(a.(*pkgapisapps.DaemonSet), b.(*apiextensionsv1beta1.DaemonSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.DaemonSetCondition)(nil), (*pkgapisapps.DaemonSetCondition)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_DaemonSetCondition_To_apps_DaemonSetCondition(a.(*apiextensionsv1beta1.DaemonSetCondition), b.(*pkgapisapps.DaemonSetCondition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.DaemonSetCondition)(nil), (*apiextensionsv1beta1.DaemonSetCondition)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_DaemonSetCondition_To_v1beta1_DaemonSetCondition(a.(*pkgapisapps.DaemonSetCondition), b.(*apiextensionsv1beta1.DaemonSetCondition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.DaemonSetList)(nil), (*pkgapisapps.DaemonSetList)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_DaemonSetList_To_apps_DaemonSetList(a.(*apiextensionsv1beta1.DaemonSetList), b.(*pkgapisapps.DaemonSetList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.DaemonSetList)(nil), (*apiextensionsv1beta1.DaemonSetList)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_DaemonSetList_To_v1beta1_DaemonSetList(a.(*pkgapisapps.DaemonSetList), b.(*apiextensionsv1beta1.DaemonSetList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.DaemonSetSpec)(nil), (*pkgapisapps.DaemonSetSpec)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_DaemonSetSpec_To_apps_DaemonSetSpec(a.(*apiextensionsv1beta1.DaemonSetSpec), b.(*pkgapisapps.DaemonSetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.DaemonSetSpec)(nil), (*apiextensionsv1beta1.DaemonSetSpec)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_DaemonSetSpec_To_v1beta1_DaemonSetSpec(a.(*pkgapisapps.DaemonSetSpec), b.(*apiextensionsv1beta1.DaemonSetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.DaemonSetStatus)(nil), (*pkgapisapps.DaemonSetStatus)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_DaemonSetStatus_To_apps_DaemonSetStatus(a.(*apiextensionsv1beta1.DaemonSetStatus), b.(*pkgapisapps.DaemonSetStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.DaemonSetStatus)(nil), (*apiextensionsv1beta1.DaemonSetStatus)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_DaemonSetStatus_To_v1beta1_DaemonSetStatus(a.(*pkgapisapps.DaemonSetStatus), b.(*apiextensionsv1beta1.DaemonSetStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.DaemonSetUpdateStrategy)(nil), (*pkgapisapps.DaemonSetUpdateStrategy)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_DaemonSetUpdateStrategy_To_apps_DaemonSetUpdateStrategy(a.(*apiextensionsv1beta1.DaemonSetUpdateStrategy), b.(*pkgapisapps.DaemonSetUpdateStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.DaemonSetUpdateStrategy)(nil), (*apiextensionsv1beta1.DaemonSetUpdateStrategy)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_DaemonSetUpdateStrategy_To_v1beta1_DaemonSetUpdateStrategy(a.(*pkgapisapps.DaemonSetUpdateStrategy), b.(*apiextensionsv1beta1.DaemonSetUpdateStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.Deployment)(nil), (*pkgapisapps.Deployment)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_Deployment_To_apps_Deployment(a.(*apiextensionsv1beta1.Deployment), b.(*pkgapisapps.Deployment), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.Deployment)(nil), (*apiextensionsv1beta1.Deployment)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_Deployment_To_v1beta1_Deployment(a.(*pkgapisapps.Deployment), b.(*apiextensionsv1beta1.Deployment), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.DeploymentCondition)(nil), (*pkgapisapps.DeploymentCondition)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_DeploymentCondition_To_apps_DeploymentCondition(a.(*apiextensionsv1beta1.DeploymentCondition), b.(*pkgapisapps.DeploymentCondition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.DeploymentCondition)(nil), (*apiextensionsv1beta1.DeploymentCondition)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_DeploymentCondition_To_v1beta1_DeploymentCondition(a.(*pkgapisapps.DeploymentCondition), b.(*apiextensionsv1beta1.DeploymentCondition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.DeploymentList)(nil), (*pkgapisapps.DeploymentList)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_DeploymentList_To_apps_DeploymentList(a.(*apiextensionsv1beta1.DeploymentList), b.(*pkgapisapps.DeploymentList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.DeploymentList)(nil), (*apiextensionsv1beta1.DeploymentList)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_DeploymentList_To_v1beta1_DeploymentList(a.(*pkgapisapps.DeploymentList), b.(*apiextensionsv1beta1.DeploymentList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.DeploymentRollback)(nil), (*pkgapisapps.DeploymentRollback)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_DeploymentRollback_To_apps_DeploymentRollback(a.(*apiextensionsv1beta1.DeploymentRollback), b.(*pkgapisapps.DeploymentRollback), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.DeploymentRollback)(nil), (*apiextensionsv1beta1.DeploymentRollback)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_DeploymentRollback_To_v1beta1_DeploymentRollback(a.(*pkgapisapps.DeploymentRollback), b.(*apiextensionsv1beta1.DeploymentRollback), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.DeploymentSpec)(nil), (*pkgapisapps.DeploymentSpec)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_DeploymentSpec_To_apps_DeploymentSpec(a.(*apiextensionsv1beta1.DeploymentSpec), b.(*pkgapisapps.DeploymentSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.DeploymentSpec)(nil), (*apiextensionsv1beta1.DeploymentSpec)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_DeploymentSpec_To_v1beta1_DeploymentSpec(a.(*pkgapisapps.DeploymentSpec), b.(*apiextensionsv1beta1.DeploymentSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.DeploymentStatus)(nil), (*pkgapisapps.DeploymentStatus)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_DeploymentStatus_To_apps_DeploymentStatus(a.(*apiextensionsv1beta1.DeploymentStatus), b.(*pkgapisapps.DeploymentStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.DeploymentStatus)(nil), (*apiextensionsv1beta1.DeploymentStatus)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_DeploymentStatus_To_v1beta1_DeploymentStatus(a.(*pkgapisapps.DeploymentStatus), b.(*apiextensionsv1beta1.DeploymentStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.DeploymentStrategy)(nil), (*pkgapisapps.DeploymentStrategy)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_DeploymentStrategy_To_apps_DeploymentStrategy(a.(*apiextensionsv1beta1.DeploymentStrategy), b.(*pkgapisapps.DeploymentStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.DeploymentStrategy)(nil), (*apiextensionsv1beta1.DeploymentStrategy)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_DeploymentStrategy_To_v1beta1_DeploymentStrategy(a.(*pkgapisapps.DeploymentStrategy), b.(*apiextensionsv1beta1.DeploymentStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.FSGroupStrategyOptions)(nil), (*pkgapispolicy.FSGroupStrategyOptions)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_FSGroupStrategyOptions_To_policy_FSGroupStrategyOptions(a.(*apiextensionsv1beta1.FSGroupStrategyOptions), b.(*pkgapispolicy.FSGroupStrategyOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapispolicy.FSGroupStrategyOptions)(nil), (*apiextensionsv1beta1.FSGroupStrategyOptions)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_policy_FSGroupStrategyOptions_To_v1beta1_FSGroupStrategyOptions(a.(*pkgapispolicy.FSGroupStrategyOptions), b.(*apiextensionsv1beta1.FSGroupStrategyOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.HTTPIngressPath)(nil), (*pkgapisnetworking.HTTPIngressPath)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_HTTPIngressPath_To_networking_HTTPIngressPath(a.(*apiextensionsv1beta1.HTTPIngressPath), b.(*pkgapisnetworking.HTTPIngressPath), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisnetworking.HTTPIngressPath)(nil), (*apiextensionsv1beta1.HTTPIngressPath)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_HTTPIngressPath_To_v1beta1_HTTPIngressPath(a.(*pkgapisnetworking.HTTPIngressPath), b.(*apiextensionsv1beta1.HTTPIngressPath), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.HTTPIngressRuleValue)(nil), (*pkgapisnetworking.HTTPIngressRuleValue)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_HTTPIngressRuleValue_To_networking_HTTPIngressRuleValue(a.(*apiextensionsv1beta1.HTTPIngressRuleValue), b.(*pkgapisnetworking.HTTPIngressRuleValue), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisnetworking.HTTPIngressRuleValue)(nil), (*apiextensionsv1beta1.HTTPIngressRuleValue)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_HTTPIngressRuleValue_To_v1beta1_HTTPIngressRuleValue(a.(*pkgapisnetworking.HTTPIngressRuleValue), b.(*apiextensionsv1beta1.HTTPIngressRuleValue), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.HostPortRange)(nil), (*pkgapispolicy.HostPortRange)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_HostPortRange_To_policy_HostPortRange(a.(*apiextensionsv1beta1.HostPortRange), b.(*pkgapispolicy.HostPortRange), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapispolicy.HostPortRange)(nil), (*apiextensionsv1beta1.HostPortRange)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_policy_HostPortRange_To_v1beta1_HostPortRange(a.(*pkgapispolicy.HostPortRange), b.(*apiextensionsv1beta1.HostPortRange), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.IDRange)(nil), (*pkgapispolicy.IDRange)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_IDRange_To_policy_IDRange(a.(*apiextensionsv1beta1.IDRange), b.(*pkgapispolicy.IDRange), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapispolicy.IDRange)(nil), (*apiextensionsv1beta1.IDRange)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_policy_IDRange_To_v1beta1_IDRange(a.(*pkgapispolicy.IDRange), b.(*apiextensionsv1beta1.IDRange), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.Ingress)(nil), (*pkgapisnetworking.Ingress)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_Ingress_To_networking_Ingress(a.(*apiextensionsv1beta1.Ingress), b.(*pkgapisnetworking.Ingress), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisnetworking.Ingress)(nil), (*apiextensionsv1beta1.Ingress)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_Ingress_To_v1beta1_Ingress(a.(*pkgapisnetworking.Ingress), b.(*apiextensionsv1beta1.Ingress), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.IngressList)(nil), (*pkgapisnetworking.IngressList)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_IngressList_To_networking_IngressList(a.(*apiextensionsv1beta1.IngressList), b.(*pkgapisnetworking.IngressList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisnetworking.IngressList)(nil), (*apiextensionsv1beta1.IngressList)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_IngressList_To_v1beta1_IngressList(a.(*pkgapisnetworking.IngressList), b.(*apiextensionsv1beta1.IngressList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.IngressRule)(nil), (*pkgapisnetworking.IngressRule)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_IngressRule_To_networking_IngressRule(a.(*apiextensionsv1beta1.IngressRule), b.(*pkgapisnetworking.IngressRule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisnetworking.IngressRule)(nil), (*apiextensionsv1beta1.IngressRule)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_IngressRule_To_v1beta1_IngressRule(a.(*pkgapisnetworking.IngressRule), b.(*apiextensionsv1beta1.IngressRule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.IngressRuleValue)(nil), (*pkgapisnetworking.IngressRuleValue)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_IngressRuleValue_To_networking_IngressRuleValue(a.(*apiextensionsv1beta1.IngressRuleValue), b.(*pkgapisnetworking.IngressRuleValue), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisnetworking.IngressRuleValue)(nil), (*apiextensionsv1beta1.IngressRuleValue)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_IngressRuleValue_To_v1beta1_IngressRuleValue(a.(*pkgapisnetworking.IngressRuleValue), b.(*apiextensionsv1beta1.IngressRuleValue), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.IngressStatus)(nil), (*pkgapisnetworking.IngressStatus)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_IngressStatus_To_networking_IngressStatus(a.(*apiextensionsv1beta1.IngressStatus), b.(*pkgapisnetworking.IngressStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisnetworking.IngressStatus)(nil), (*apiextensionsv1beta1.IngressStatus)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_IngressStatus_To_v1beta1_IngressStatus(a.(*pkgapisnetworking.IngressStatus), b.(*apiextensionsv1beta1.IngressStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.IngressTLS)(nil), (*pkgapisnetworking.IngressTLS)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_IngressTLS_To_networking_IngressTLS(a.(*apiextensionsv1beta1.IngressTLS), b.(*pkgapisnetworking.IngressTLS), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisnetworking.IngressTLS)(nil), (*apiextensionsv1beta1.IngressTLS)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_IngressTLS_To_v1beta1_IngressTLS(a.(*pkgapisnetworking.IngressTLS), b.(*apiextensionsv1beta1.IngressTLS), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.NetworkPolicy)(nil), (*pkgapisnetworking.NetworkPolicy)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_NetworkPolicy_To_networking_NetworkPolicy(a.(*apiextensionsv1beta1.NetworkPolicy), b.(*pkgapisnetworking.NetworkPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisnetworking.NetworkPolicy)(nil), (*apiextensionsv1beta1.NetworkPolicy)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_NetworkPolicy_To_v1beta1_NetworkPolicy(a.(*pkgapisnetworking.NetworkPolicy), b.(*apiextensionsv1beta1.NetworkPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.NetworkPolicyList)(nil), (*pkgapisnetworking.NetworkPolicyList)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_NetworkPolicyList_To_networking_NetworkPolicyList(a.(*apiextensionsv1beta1.NetworkPolicyList), b.(*pkgapisnetworking.NetworkPolicyList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisnetworking.NetworkPolicyList)(nil), (*apiextensionsv1beta1.NetworkPolicyList)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_NetworkPolicyList_To_v1beta1_NetworkPolicyList(a.(*pkgapisnetworking.NetworkPolicyList), b.(*apiextensionsv1beta1.NetworkPolicyList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.NetworkPolicyPeer)(nil), (*pkgapisnetworking.NetworkPolicyPeer)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_NetworkPolicyPeer_To_networking_NetworkPolicyPeer(a.(*apiextensionsv1beta1.NetworkPolicyPeer), b.(*pkgapisnetworking.NetworkPolicyPeer), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisnetworking.NetworkPolicyPeer)(nil), (*apiextensionsv1beta1.NetworkPolicyPeer)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_NetworkPolicyPeer_To_v1beta1_NetworkPolicyPeer(a.(*pkgapisnetworking.NetworkPolicyPeer), b.(*apiextensionsv1beta1.NetworkPolicyPeer), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.NetworkPolicyPort)(nil), (*pkgapisnetworking.NetworkPolicyPort)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_NetworkPolicyPort_To_networking_NetworkPolicyPort(a.(*apiextensionsv1beta1.NetworkPolicyPort), b.(*pkgapisnetworking.NetworkPolicyPort), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisnetworking.NetworkPolicyPort)(nil), (*apiextensionsv1beta1.NetworkPolicyPort)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_NetworkPolicyPort_To_v1beta1_NetworkPolicyPort(a.(*pkgapisnetworking.NetworkPolicyPort), b.(*apiextensionsv1beta1.NetworkPolicyPort), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.NetworkPolicyStatus)(nil), (*pkgapisnetworking.NetworkPolicyStatus)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_NetworkPolicyStatus_To_networking_NetworkPolicyStatus(a.(*apiextensionsv1beta1.NetworkPolicyStatus), b.(*pkgapisnetworking.NetworkPolicyStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisnetworking.NetworkPolicyStatus)(nil), (*apiextensionsv1beta1.NetworkPolicyStatus)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_NetworkPolicyStatus_To_v1beta1_NetworkPolicyStatus(a.(*pkgapisnetworking.NetworkPolicyStatus), b.(*apiextensionsv1beta1.NetworkPolicyStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.PodSecurityPolicy)(nil), (*pkgapispolicy.PodSecurityPolicy)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_PodSecurityPolicy_To_policy_PodSecurityPolicy(a.(*apiextensionsv1beta1.PodSecurityPolicy), b.(*pkgapispolicy.PodSecurityPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapispolicy.PodSecurityPolicy)(nil), (*apiextensionsv1beta1.PodSecurityPolicy)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_policy_PodSecurityPolicy_To_v1beta1_PodSecurityPolicy(a.(*pkgapispolicy.PodSecurityPolicy), b.(*apiextensionsv1beta1.PodSecurityPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.PodSecurityPolicyList)(nil), (*pkgapispolicy.PodSecurityPolicyList)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_PodSecurityPolicyList_To_policy_PodSecurityPolicyList(a.(*apiextensionsv1beta1.PodSecurityPolicyList), b.(*pkgapispolicy.PodSecurityPolicyList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapispolicy.PodSecurityPolicyList)(nil), (*apiextensionsv1beta1.PodSecurityPolicyList)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_policy_PodSecurityPolicyList_To_v1beta1_PodSecurityPolicyList(a.(*pkgapispolicy.PodSecurityPolicyList), b.(*apiextensionsv1beta1.PodSecurityPolicyList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.PodSecurityPolicySpec)(nil), (*pkgapispolicy.PodSecurityPolicySpec)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_PodSecurityPolicySpec_To_policy_PodSecurityPolicySpec(a.(*apiextensionsv1beta1.PodSecurityPolicySpec), b.(*pkgapispolicy.PodSecurityPolicySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapispolicy.PodSecurityPolicySpec)(nil), (*apiextensionsv1beta1.PodSecurityPolicySpec)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_policy_PodSecurityPolicySpec_To_v1beta1_PodSecurityPolicySpec(a.(*pkgapispolicy.PodSecurityPolicySpec), b.(*apiextensionsv1beta1.PodSecurityPolicySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.ReplicaSet)(nil), (*pkgapisapps.ReplicaSet)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_ReplicaSet_To_apps_ReplicaSet(a.(*apiextensionsv1beta1.ReplicaSet), b.(*pkgapisapps.ReplicaSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.ReplicaSet)(nil), (*apiextensionsv1beta1.ReplicaSet)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_ReplicaSet_To_v1beta1_ReplicaSet(a.(*pkgapisapps.ReplicaSet), b.(*apiextensionsv1beta1.ReplicaSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.ReplicaSetCondition)(nil), (*pkgapisapps.ReplicaSetCondition)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_ReplicaSetCondition_To_apps_ReplicaSetCondition(a.(*apiextensionsv1beta1.ReplicaSetCondition), b.(*pkgapisapps.ReplicaSetCondition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.ReplicaSetCondition)(nil), (*apiextensionsv1beta1.ReplicaSetCondition)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_ReplicaSetCondition_To_v1beta1_ReplicaSetCondition(a.(*pkgapisapps.ReplicaSetCondition), b.(*apiextensionsv1beta1.ReplicaSetCondition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.ReplicaSetList)(nil), (*pkgapisapps.ReplicaSetList)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_ReplicaSetList_To_apps_ReplicaSetList(a.(*apiextensionsv1beta1.ReplicaSetList), b.(*pkgapisapps.ReplicaSetList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.ReplicaSetList)(nil), (*apiextensionsv1beta1.ReplicaSetList)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_ReplicaSetList_To_v1beta1_ReplicaSetList(a.(*pkgapisapps.ReplicaSetList), b.(*apiextensionsv1beta1.ReplicaSetList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.ReplicaSetSpec)(nil), (*pkgapisapps.ReplicaSetSpec)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_ReplicaSetSpec_To_apps_ReplicaSetSpec(a.(*apiextensionsv1beta1.ReplicaSetSpec), b.(*pkgapisapps.ReplicaSetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.ReplicaSetSpec)(nil), (*apiextensionsv1beta1.ReplicaSetSpec)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_ReplicaSetSpec_To_v1beta1_ReplicaSetSpec(a.(*pkgapisapps.ReplicaSetSpec), b.(*apiextensionsv1beta1.ReplicaSetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.ReplicaSetStatus)(nil), (*pkgapisapps.ReplicaSetStatus)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_ReplicaSetStatus_To_apps_ReplicaSetStatus(a.(*apiextensionsv1beta1.ReplicaSetStatus), b.(*pkgapisapps.ReplicaSetStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.ReplicaSetStatus)(nil), (*apiextensionsv1beta1.ReplicaSetStatus)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_ReplicaSetStatus_To_v1beta1_ReplicaSetStatus(a.(*pkgapisapps.ReplicaSetStatus), b.(*apiextensionsv1beta1.ReplicaSetStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.RollbackConfig)(nil), (*pkgapisapps.RollbackConfig)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_RollbackConfig_To_apps_RollbackConfig(a.(*apiextensionsv1beta1.RollbackConfig), b.(*pkgapisapps.RollbackConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.RollbackConfig)(nil), (*apiextensionsv1beta1.RollbackConfig)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_RollbackConfig_To_v1beta1_RollbackConfig(a.(*pkgapisapps.RollbackConfig), b.(*apiextensionsv1beta1.RollbackConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.RollingUpdateDaemonSet)(nil), (*pkgapisapps.RollingUpdateDaemonSet)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_RollingUpdateDaemonSet_To_apps_RollingUpdateDaemonSet(a.(*apiextensionsv1beta1.RollingUpdateDaemonSet), b.(*pkgapisapps.RollingUpdateDaemonSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.RollingUpdateDaemonSet)(nil), (*apiextensionsv1beta1.RollingUpdateDaemonSet)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_RollingUpdateDaemonSet_To_v1beta1_RollingUpdateDaemonSet(a.(*pkgapisapps.RollingUpdateDaemonSet), b.(*apiextensionsv1beta1.RollingUpdateDaemonSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.RollingUpdateDeployment)(nil), (*pkgapisapps.RollingUpdateDeployment)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_RollingUpdateDeployment_To_apps_RollingUpdateDeployment(a.(*apiextensionsv1beta1.RollingUpdateDeployment), b.(*pkgapisapps.RollingUpdateDeployment), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisapps.RollingUpdateDeployment)(nil), (*apiextensionsv1beta1.RollingUpdateDeployment)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_apps_RollingUpdateDeployment_To_v1beta1_RollingUpdateDeployment(a.(*pkgapisapps.RollingUpdateDeployment), b.(*apiextensionsv1beta1.RollingUpdateDeployment), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.RunAsGroupStrategyOptions)(nil), (*pkgapispolicy.RunAsGroupStrategyOptions)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_RunAsGroupStrategyOptions_To_policy_RunAsGroupStrategyOptions(a.(*apiextensionsv1beta1.RunAsGroupStrategyOptions), b.(*pkgapispolicy.RunAsGroupStrategyOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapispolicy.RunAsGroupStrategyOptions)(nil), (*apiextensionsv1beta1.RunAsGroupStrategyOptions)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_policy_RunAsGroupStrategyOptions_To_v1beta1_RunAsGroupStrategyOptions(a.(*pkgapispolicy.RunAsGroupStrategyOptions), b.(*apiextensionsv1beta1.RunAsGroupStrategyOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.RunAsUserStrategyOptions)(nil), (*pkgapispolicy.RunAsUserStrategyOptions)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_RunAsUserStrategyOptions_To_policy_RunAsUserStrategyOptions(a.(*apiextensionsv1beta1.RunAsUserStrategyOptions), b.(*pkgapispolicy.RunAsUserStrategyOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapispolicy.RunAsUserStrategyOptions)(nil), (*apiextensionsv1beta1.RunAsUserStrategyOptions)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_policy_RunAsUserStrategyOptions_To_v1beta1_RunAsUserStrategyOptions(a.(*pkgapispolicy.RunAsUserStrategyOptions), b.(*apiextensionsv1beta1.RunAsUserStrategyOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.RuntimeClassStrategyOptions)(nil), (*pkgapispolicy.RuntimeClassStrategyOptions)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_RuntimeClassStrategyOptions_To_policy_RuntimeClassStrategyOptions(a.(*apiextensionsv1beta1.RuntimeClassStrategyOptions), b.(*pkgapispolicy.RuntimeClassStrategyOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapispolicy.RuntimeClassStrategyOptions)(nil), (*apiextensionsv1beta1.RuntimeClassStrategyOptions)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_policy_RuntimeClassStrategyOptions_To_v1beta1_RuntimeClassStrategyOptions(a.(*pkgapispolicy.RuntimeClassStrategyOptions), b.(*apiextensionsv1beta1.RuntimeClassStrategyOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.SELinuxStrategyOptions)(nil), (*pkgapispolicy.SELinuxStrategyOptions)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_SELinuxStrategyOptions_To_policy_SELinuxStrategyOptions(a.(*apiextensionsv1beta1.SELinuxStrategyOptions), b.(*pkgapispolicy.SELinuxStrategyOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapispolicy.SELinuxStrategyOptions)(nil), (*apiextensionsv1beta1.SELinuxStrategyOptions)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_policy_SELinuxStrategyOptions_To_v1beta1_SELinuxStrategyOptions(a.(*pkgapispolicy.SELinuxStrategyOptions), b.(*apiextensionsv1beta1.SELinuxStrategyOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.Scale)(nil), (*pkgapisautoscaling.Scale)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_Scale_To_autoscaling_Scale(a.(*apiextensionsv1beta1.Scale), b.(*pkgapisautoscaling.Scale), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisautoscaling.Scale)(nil), (*apiextensionsv1beta1.Scale)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_autoscaling_Scale_To_v1beta1_Scale(a.(*pkgapisautoscaling.Scale), b.(*apiextensionsv1beta1.Scale), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.ScaleSpec)(nil), (*pkgapisautoscaling.ScaleSpec)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_ScaleSpec_To_autoscaling_ScaleSpec(a.(*apiextensionsv1beta1.ScaleSpec), b.(*pkgapisautoscaling.ScaleSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapisautoscaling.ScaleSpec)(nil), (*apiextensionsv1beta1.ScaleSpec)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_autoscaling_ScaleSpec_To_v1beta1_ScaleSpec(a.(*pkgapisautoscaling.ScaleSpec), b.(*apiextensionsv1beta1.ScaleSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*apiextensionsv1beta1.SupplementalGroupsStrategyOptions)(nil), (*pkgapispolicy.SupplementalGroupsStrategyOptions)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_SupplementalGroupsStrategyOptions_To_policy_SupplementalGroupsStrategyOptions(a.(*apiextensionsv1beta1.SupplementalGroupsStrategyOptions), b.(*pkgapispolicy.SupplementalGroupsStrategyOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*pkgapispolicy.SupplementalGroupsStrategyOptions)(nil), (*apiextensionsv1beta1.SupplementalGroupsStrategyOptions)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_policy_SupplementalGroupsStrategyOptions_To_v1beta1_SupplementalGroupsStrategyOptions(a.(*pkgapispolicy.SupplementalGroupsStrategyOptions), b.(*apiextensionsv1beta1.SupplementalGroupsStrategyOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*pkgapisautoscaling.ScaleStatus)(nil), (*apiextensionsv1beta1.ScaleStatus)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_autoscaling_ScaleStatus_To_v1beta1_ScaleStatus(a.(*pkgapisautoscaling.ScaleStatus), b.(*apiextensionsv1beta1.ScaleStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*pkgapisnetworking.IPBlock)(nil), (*apiextensionsv1beta1.IPBlock)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_IPBlock_To_v1beta1_IPBlock(a.(*pkgapisnetworking.IPBlock), b.(*apiextensionsv1beta1.IPBlock), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*pkgapisnetworking.IngressBackend)(nil), (*apiextensionsv1beta1.IngressBackend)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_IngressBackend_To_v1beta1_IngressBackend(a.(*pkgapisnetworking.IngressBackend), b.(*apiextensionsv1beta1.IngressBackend), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*pkgapisnetworking.IngressSpec)(nil), (*apiextensionsv1beta1.IngressSpec)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_IngressSpec_To_v1beta1_IngressSpec(a.(*pkgapisnetworking.IngressSpec), b.(*apiextensionsv1beta1.IngressSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*pkgapisnetworking.NetworkPolicyEgressRule)(nil), (*apiextensionsv1beta1.NetworkPolicyEgressRule)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_NetworkPolicyEgressRule_To_v1beta1_NetworkPolicyEgressRule(a.(*pkgapisnetworking.NetworkPolicyEgressRule), b.(*apiextensionsv1beta1.NetworkPolicyEgressRule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*pkgapisnetworking.NetworkPolicyIngressRule)(nil), (*apiextensionsv1beta1.NetworkPolicyIngressRule)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_NetworkPolicyIngressRule_To_v1beta1_NetworkPolicyIngressRule(a.(*pkgapisnetworking.NetworkPolicyIngressRule), b.(*apiextensionsv1beta1.NetworkPolicyIngressRule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*pkgapisnetworking.NetworkPolicySpec)(nil), (*apiextensionsv1beta1.NetworkPolicySpec)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_networking_NetworkPolicySpec_To_v1beta1_NetworkPolicySpec(a.(*pkgapisnetworking.NetworkPolicySpec), b.(*apiextensionsv1beta1.NetworkPolicySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*apiextensionsv1beta1.IPBlock)(nil), (*pkgapisnetworking.IPBlock)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_IPBlock_To_networking_IPBlock(a.(*apiextensionsv1beta1.IPBlock), b.(*pkgapisnetworking.IPBlock), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*apiextensionsv1beta1.IngressBackend)(nil), (*pkgapisnetworking.IngressBackend)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_IngressBackend_To_networking_IngressBackend(a.(*apiextensionsv1beta1.IngressBackend), b.(*pkgapisnetworking.IngressBackend), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*apiextensionsv1beta1.IngressSpec)(nil), (*pkgapisnetworking.IngressSpec)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_IngressSpec_To_networking_IngressSpec(a.(*apiextensionsv1beta1.IngressSpec), b.(*pkgapisnetworking.IngressSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*apiextensionsv1beta1.NetworkPolicyEgressRule)(nil), (*pkgapisnetworking.NetworkPolicyEgressRule)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_NetworkPolicyEgressRule_To_networking_NetworkPolicyEgressRule(a.(*apiextensionsv1beta1.NetworkPolicyEgressRule), b.(*pkgapisnetworking.NetworkPolicyEgressRule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*apiextensionsv1beta1.NetworkPolicyIngressRule)(nil), (*pkgapisnetworking.NetworkPolicyIngressRule)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_NetworkPolicyIngressRule_To_networking_NetworkPolicyIngressRule(a.(*apiextensionsv1beta1.NetworkPolicyIngressRule), b.(*pkgapisnetworking.NetworkPolicyIngressRule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*apiextensionsv1beta1.NetworkPolicySpec)(nil), (*pkgapisnetworking.NetworkPolicySpec)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_NetworkPolicySpec_To_networking_NetworkPolicySpec(a.(*apiextensionsv1beta1.NetworkPolicySpec), b.(*pkgapisnetworking.NetworkPolicySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*apiextensionsv1beta1.ScaleStatus)(nil), (*pkgapisautoscaling.ScaleStatus)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1beta1_ScaleStatus_To_autoscaling_ScaleStatus(a.(*apiextensionsv1beta1.ScaleStatus), b.(*pkgapisautoscaling.ScaleStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta1_AllowedCSIDriver_To_policy_AllowedCSIDriver(in *apiextensionsv1beta1.AllowedCSIDriver, out *pkgapispolicy.AllowedCSIDriver, s apimachinerypkgconversion.Scope) error {
	out.Name = in.Name
	return nil
}

// Convert_v1beta1_AllowedCSIDriver_To_policy_AllowedCSIDriver is an autogenerated conversion function.
func Convert_v1beta1_AllowedCSIDriver_To_policy_AllowedCSIDriver(in *apiextensionsv1beta1.AllowedCSIDriver, out *pkgapispolicy.AllowedCSIDriver, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_AllowedCSIDriver_To_policy_AllowedCSIDriver(in, out, s)
}

func autoConvert_policy_AllowedCSIDriver_To_v1beta1_AllowedCSIDriver(in *pkgapispolicy.AllowedCSIDriver, out *apiextensionsv1beta1.AllowedCSIDriver, s apimachinerypkgconversion.Scope) error {
	out.Name = in.Name
	return nil
}

// Convert_policy_AllowedCSIDriver_To_v1beta1_AllowedCSIDriver is an autogenerated conversion function.
func Convert_policy_AllowedCSIDriver_To_v1beta1_AllowedCSIDriver(in *pkgapispolicy.AllowedCSIDriver, out *apiextensionsv1beta1.AllowedCSIDriver, s apimachinerypkgconversion.Scope) error {
	return autoConvert_policy_AllowedCSIDriver_To_v1beta1_AllowedCSIDriver(in, out, s)
}

func autoConvert_v1beta1_AllowedFlexVolume_To_policy_AllowedFlexVolume(in *apiextensionsv1beta1.AllowedFlexVolume, out *pkgapispolicy.AllowedFlexVolume, s apimachinerypkgconversion.Scope) error {
	out.Driver = in.Driver
	return nil
}

// Convert_v1beta1_AllowedFlexVolume_To_policy_AllowedFlexVolume is an autogenerated conversion function.
func Convert_v1beta1_AllowedFlexVolume_To_policy_AllowedFlexVolume(in *apiextensionsv1beta1.AllowedFlexVolume, out *pkgapispolicy.AllowedFlexVolume, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_AllowedFlexVolume_To_policy_AllowedFlexVolume(in, out, s)
}

func autoConvert_policy_AllowedFlexVolume_To_v1beta1_AllowedFlexVolume(in *pkgapispolicy.AllowedFlexVolume, out *apiextensionsv1beta1.AllowedFlexVolume, s apimachinerypkgconversion.Scope) error {
	out.Driver = in.Driver
	return nil
}

// Convert_policy_AllowedFlexVolume_To_v1beta1_AllowedFlexVolume is an autogenerated conversion function.
func Convert_policy_AllowedFlexVolume_To_v1beta1_AllowedFlexVolume(in *pkgapispolicy.AllowedFlexVolume, out *apiextensionsv1beta1.AllowedFlexVolume, s apimachinerypkgconversion.Scope) error {
	return autoConvert_policy_AllowedFlexVolume_To_v1beta1_AllowedFlexVolume(in, out, s)
}

func autoConvert_v1beta1_AllowedHostPath_To_policy_AllowedHostPath(in *apiextensionsv1beta1.AllowedHostPath, out *pkgapispolicy.AllowedHostPath, s apimachinerypkgconversion.Scope) error {
	out.PathPrefix = in.PathPrefix
	out.ReadOnly = in.ReadOnly
	return nil
}

// Convert_v1beta1_AllowedHostPath_To_policy_AllowedHostPath is an autogenerated conversion function.
func Convert_v1beta1_AllowedHostPath_To_policy_AllowedHostPath(in *apiextensionsv1beta1.AllowedHostPath, out *pkgapispolicy.AllowedHostPath, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_AllowedHostPath_To_policy_AllowedHostPath(in, out, s)
}

func autoConvert_policy_AllowedHostPath_To_v1beta1_AllowedHostPath(in *pkgapispolicy.AllowedHostPath, out *apiextensionsv1beta1.AllowedHostPath, s apimachinerypkgconversion.Scope) error {
	out.PathPrefix = in.PathPrefix
	out.ReadOnly = in.ReadOnly
	return nil
}

// Convert_policy_AllowedHostPath_To_v1beta1_AllowedHostPath is an autogenerated conversion function.
func Convert_policy_AllowedHostPath_To_v1beta1_AllowedHostPath(in *pkgapispolicy.AllowedHostPath, out *apiextensionsv1beta1.AllowedHostPath, s apimachinerypkgconversion.Scope) error {
	return autoConvert_policy_AllowedHostPath_To_v1beta1_AllowedHostPath(in, out, s)
}

func autoConvert_v1beta1_DaemonSet_To_apps_DaemonSet(in *apiextensionsv1beta1.DaemonSet, out *pkgapisapps.DaemonSet, s apimachinerypkgconversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_DaemonSetSpec_To_apps_DaemonSetSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_DaemonSetStatus_To_apps_DaemonSetStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_DaemonSet_To_apps_DaemonSet is an autogenerated conversion function.
func Convert_v1beta1_DaemonSet_To_apps_DaemonSet(in *apiextensionsv1beta1.DaemonSet, out *pkgapisapps.DaemonSet, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_DaemonSet_To_apps_DaemonSet(in, out, s)
}

func autoConvert_apps_DaemonSet_To_v1beta1_DaemonSet(in *pkgapisapps.DaemonSet, out *apiextensionsv1beta1.DaemonSet, s apimachinerypkgconversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_apps_DaemonSetSpec_To_v1beta1_DaemonSetSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_apps_DaemonSetStatus_To_v1beta1_DaemonSetStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_apps_DaemonSet_To_v1beta1_DaemonSet is an autogenerated conversion function.
func Convert_apps_DaemonSet_To_v1beta1_DaemonSet(in *pkgapisapps.DaemonSet, out *apiextensionsv1beta1.DaemonSet, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_DaemonSet_To_v1beta1_DaemonSet(in, out, s)
}

func autoConvert_v1beta1_DaemonSetCondition_To_apps_DaemonSetCondition(in *apiextensionsv1beta1.DaemonSetCondition, out *pkgapisapps.DaemonSetCondition, s apimachinerypkgconversion.Scope) error {
	out.Type = pkgapisapps.DaemonSetConditionType(in.Type)
	out.Status = pkgapiscore.ConditionStatus(in.Status)
	out.LastTransitionTime = in.LastTransitionTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

// Convert_v1beta1_DaemonSetCondition_To_apps_DaemonSetCondition is an autogenerated conversion function.
func Convert_v1beta1_DaemonSetCondition_To_apps_DaemonSetCondition(in *apiextensionsv1beta1.DaemonSetCondition, out *pkgapisapps.DaemonSetCondition, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_DaemonSetCondition_To_apps_DaemonSetCondition(in, out, s)
}

func autoConvert_apps_DaemonSetCondition_To_v1beta1_DaemonSetCondition(in *pkgapisapps.DaemonSetCondition, out *apiextensionsv1beta1.DaemonSetCondition, s apimachinerypkgconversion.Scope) error {
	out.Type = apiextensionsv1beta1.DaemonSetConditionType(in.Type)
	out.Status = apicorev1.ConditionStatus(in.Status)
	out.LastTransitionTime = in.LastTransitionTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

// Convert_apps_DaemonSetCondition_To_v1beta1_DaemonSetCondition is an autogenerated conversion function.
func Convert_apps_DaemonSetCondition_To_v1beta1_DaemonSetCondition(in *pkgapisapps.DaemonSetCondition, out *apiextensionsv1beta1.DaemonSetCondition, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_DaemonSetCondition_To_v1beta1_DaemonSetCondition(in, out, s)
}

func autoConvert_v1beta1_DaemonSetList_To_apps_DaemonSetList(in *apiextensionsv1beta1.DaemonSetList, out *pkgapisapps.DaemonSetList, s apimachinerypkgconversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]pkgapisapps.DaemonSet, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_DaemonSet_To_apps_DaemonSet(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta1_DaemonSetList_To_apps_DaemonSetList is an autogenerated conversion function.
func Convert_v1beta1_DaemonSetList_To_apps_DaemonSetList(in *apiextensionsv1beta1.DaemonSetList, out *pkgapisapps.DaemonSetList, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_DaemonSetList_To_apps_DaemonSetList(in, out, s)
}

func autoConvert_apps_DaemonSetList_To_v1beta1_DaemonSetList(in *pkgapisapps.DaemonSetList, out *apiextensionsv1beta1.DaemonSetList, s apimachinerypkgconversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]apiextensionsv1beta1.DaemonSet, len(*in))
		for i := range *in {
			if err := Convert_apps_DaemonSet_To_v1beta1_DaemonSet(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_apps_DaemonSetList_To_v1beta1_DaemonSetList is an autogenerated conversion function.
func Convert_apps_DaemonSetList_To_v1beta1_DaemonSetList(in *pkgapisapps.DaemonSetList, out *apiextensionsv1beta1.DaemonSetList, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_DaemonSetList_To_v1beta1_DaemonSetList(in, out, s)
}

func autoConvert_v1beta1_DaemonSetSpec_To_apps_DaemonSetSpec(in *apiextensionsv1beta1.DaemonSetSpec, out *pkgapisapps.DaemonSetSpec, s apimachinerypkgconversion.Scope) error {
	out.Selector = (*apismetav1.LabelSelector)(unsafe.Pointer(in.Selector))
	if err := apiscorev1.Convert_v1_PodTemplateSpec_To_core_PodTemplateSpec(&in.Template, &out.Template, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_DaemonSetUpdateStrategy_To_apps_DaemonSetUpdateStrategy(&in.UpdateStrategy, &out.UpdateStrategy, s); err != nil {
		return err
	}
	out.MinReadySeconds = in.MinReadySeconds
	out.TemplateGeneration = in.TemplateGeneration
	out.RevisionHistoryLimit = (*int32)(unsafe.Pointer(in.RevisionHistoryLimit))
	return nil
}

// Convert_v1beta1_DaemonSetSpec_To_apps_DaemonSetSpec is an autogenerated conversion function.
func Convert_v1beta1_DaemonSetSpec_To_apps_DaemonSetSpec(in *apiextensionsv1beta1.DaemonSetSpec, out *pkgapisapps.DaemonSetSpec, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_DaemonSetSpec_To_apps_DaemonSetSpec(in, out, s)
}

func autoConvert_apps_DaemonSetSpec_To_v1beta1_DaemonSetSpec(in *pkgapisapps.DaemonSetSpec, out *apiextensionsv1beta1.DaemonSetSpec, s apimachinerypkgconversion.Scope) error {
	out.Selector = (*apismetav1.LabelSelector)(unsafe.Pointer(in.Selector))
	if err := apiscorev1.Convert_core_PodTemplateSpec_To_v1_PodTemplateSpec(&in.Template, &out.Template, s); err != nil {
		return err
	}
	if err := Convert_apps_DaemonSetUpdateStrategy_To_v1beta1_DaemonSetUpdateStrategy(&in.UpdateStrategy, &out.UpdateStrategy, s); err != nil {
		return err
	}
	out.MinReadySeconds = in.MinReadySeconds
	out.TemplateGeneration = in.TemplateGeneration
	out.RevisionHistoryLimit = (*int32)(unsafe.Pointer(in.RevisionHistoryLimit))
	return nil
}

// Convert_apps_DaemonSetSpec_To_v1beta1_DaemonSetSpec is an autogenerated conversion function.
func Convert_apps_DaemonSetSpec_To_v1beta1_DaemonSetSpec(in *pkgapisapps.DaemonSetSpec, out *apiextensionsv1beta1.DaemonSetSpec, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_DaemonSetSpec_To_v1beta1_DaemonSetSpec(in, out, s)
}

func autoConvert_v1beta1_DaemonSetStatus_To_apps_DaemonSetStatus(in *apiextensionsv1beta1.DaemonSetStatus, out *pkgapisapps.DaemonSetStatus, s apimachinerypkgconversion.Scope) error {
	out.CurrentNumberScheduled = in.CurrentNumberScheduled
	out.NumberMisscheduled = in.NumberMisscheduled
	out.DesiredNumberScheduled = in.DesiredNumberScheduled
	out.NumberReady = in.NumberReady
	out.ObservedGeneration = in.ObservedGeneration
	out.UpdatedNumberScheduled = in.UpdatedNumberScheduled
	out.NumberAvailable = in.NumberAvailable
	out.NumberUnavailable = in.NumberUnavailable
	out.CollisionCount = (*int32)(unsafe.Pointer(in.CollisionCount))
	out.Conditions = *(*[]pkgapisapps.DaemonSetCondition)(unsafe.Pointer(&in.Conditions))
	return nil
}

// Convert_v1beta1_DaemonSetStatus_To_apps_DaemonSetStatus is an autogenerated conversion function.
func Convert_v1beta1_DaemonSetStatus_To_apps_DaemonSetStatus(in *apiextensionsv1beta1.DaemonSetStatus, out *pkgapisapps.DaemonSetStatus, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_DaemonSetStatus_To_apps_DaemonSetStatus(in, out, s)
}

func autoConvert_apps_DaemonSetStatus_To_v1beta1_DaemonSetStatus(in *pkgapisapps.DaemonSetStatus, out *apiextensionsv1beta1.DaemonSetStatus, s apimachinerypkgconversion.Scope) error {
	out.CurrentNumberScheduled = in.CurrentNumberScheduled
	out.NumberMisscheduled = in.NumberMisscheduled
	out.DesiredNumberScheduled = in.DesiredNumberScheduled
	out.NumberReady = in.NumberReady
	out.ObservedGeneration = in.ObservedGeneration
	out.UpdatedNumberScheduled = in.UpdatedNumberScheduled
	out.NumberAvailable = in.NumberAvailable
	out.NumberUnavailable = in.NumberUnavailable
	out.CollisionCount = (*int32)(unsafe.Pointer(in.CollisionCount))
	out.Conditions = *(*[]apiextensionsv1beta1.DaemonSetCondition)(unsafe.Pointer(&in.Conditions))
	return nil
}

// Convert_apps_DaemonSetStatus_To_v1beta1_DaemonSetStatus is an autogenerated conversion function.
func Convert_apps_DaemonSetStatus_To_v1beta1_DaemonSetStatus(in *pkgapisapps.DaemonSetStatus, out *apiextensionsv1beta1.DaemonSetStatus, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_DaemonSetStatus_To_v1beta1_DaemonSetStatus(in, out, s)
}

func autoConvert_v1beta1_DaemonSetUpdateStrategy_To_apps_DaemonSetUpdateStrategy(in *apiextensionsv1beta1.DaemonSetUpdateStrategy, out *pkgapisapps.DaemonSetUpdateStrategy, s apimachinerypkgconversion.Scope) error {
	out.Type = pkgapisapps.DaemonSetUpdateStrategyType(in.Type)
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = new(pkgapisapps.RollingUpdateDaemonSet)
		if err := Convert_v1beta1_RollingUpdateDaemonSet_To_apps_RollingUpdateDaemonSet(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.RollingUpdate = nil
	}
	return nil
}

// Convert_v1beta1_DaemonSetUpdateStrategy_To_apps_DaemonSetUpdateStrategy is an autogenerated conversion function.
func Convert_v1beta1_DaemonSetUpdateStrategy_To_apps_DaemonSetUpdateStrategy(in *apiextensionsv1beta1.DaemonSetUpdateStrategy, out *pkgapisapps.DaemonSetUpdateStrategy, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_DaemonSetUpdateStrategy_To_apps_DaemonSetUpdateStrategy(in, out, s)
}

func autoConvert_apps_DaemonSetUpdateStrategy_To_v1beta1_DaemonSetUpdateStrategy(in *pkgapisapps.DaemonSetUpdateStrategy, out *apiextensionsv1beta1.DaemonSetUpdateStrategy, s apimachinerypkgconversion.Scope) error {
	out.Type = apiextensionsv1beta1.DaemonSetUpdateStrategyType(in.Type)
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = new(apiextensionsv1beta1.RollingUpdateDaemonSet)
		if err := Convert_apps_RollingUpdateDaemonSet_To_v1beta1_RollingUpdateDaemonSet(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.RollingUpdate = nil
	}
	return nil
}

// Convert_apps_DaemonSetUpdateStrategy_To_v1beta1_DaemonSetUpdateStrategy is an autogenerated conversion function.
func Convert_apps_DaemonSetUpdateStrategy_To_v1beta1_DaemonSetUpdateStrategy(in *pkgapisapps.DaemonSetUpdateStrategy, out *apiextensionsv1beta1.DaemonSetUpdateStrategy, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_DaemonSetUpdateStrategy_To_v1beta1_DaemonSetUpdateStrategy(in, out, s)
}

func autoConvert_v1beta1_Deployment_To_apps_Deployment(in *apiextensionsv1beta1.Deployment, out *pkgapisapps.Deployment, s apimachinerypkgconversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_DeploymentSpec_To_apps_DeploymentSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_DeploymentStatus_To_apps_DeploymentStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_Deployment_To_apps_Deployment is an autogenerated conversion function.
func Convert_v1beta1_Deployment_To_apps_Deployment(in *apiextensionsv1beta1.Deployment, out *pkgapisapps.Deployment, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_Deployment_To_apps_Deployment(in, out, s)
}

func autoConvert_apps_Deployment_To_v1beta1_Deployment(in *pkgapisapps.Deployment, out *apiextensionsv1beta1.Deployment, s apimachinerypkgconversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_apps_DeploymentSpec_To_v1beta1_DeploymentSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_apps_DeploymentStatus_To_v1beta1_DeploymentStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_apps_Deployment_To_v1beta1_Deployment is an autogenerated conversion function.
func Convert_apps_Deployment_To_v1beta1_Deployment(in *pkgapisapps.Deployment, out *apiextensionsv1beta1.Deployment, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_Deployment_To_v1beta1_Deployment(in, out, s)
}

func autoConvert_v1beta1_DeploymentCondition_To_apps_DeploymentCondition(in *apiextensionsv1beta1.DeploymentCondition, out *pkgapisapps.DeploymentCondition, s apimachinerypkgconversion.Scope) error {
	out.Type = pkgapisapps.DeploymentConditionType(in.Type)
	out.Status = pkgapiscore.ConditionStatus(in.Status)
	out.LastUpdateTime = in.LastUpdateTime
	out.LastTransitionTime = in.LastTransitionTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

// Convert_v1beta1_DeploymentCondition_To_apps_DeploymentCondition is an autogenerated conversion function.
func Convert_v1beta1_DeploymentCondition_To_apps_DeploymentCondition(in *apiextensionsv1beta1.DeploymentCondition, out *pkgapisapps.DeploymentCondition, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_DeploymentCondition_To_apps_DeploymentCondition(in, out, s)
}

func autoConvert_apps_DeploymentCondition_To_v1beta1_DeploymentCondition(in *pkgapisapps.DeploymentCondition, out *apiextensionsv1beta1.DeploymentCondition, s apimachinerypkgconversion.Scope) error {
	out.Type = apiextensionsv1beta1.DeploymentConditionType(in.Type)
	out.Status = apicorev1.ConditionStatus(in.Status)
	out.LastUpdateTime = in.LastUpdateTime
	out.LastTransitionTime = in.LastTransitionTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

// Convert_apps_DeploymentCondition_To_v1beta1_DeploymentCondition is an autogenerated conversion function.
func Convert_apps_DeploymentCondition_To_v1beta1_DeploymentCondition(in *pkgapisapps.DeploymentCondition, out *apiextensionsv1beta1.DeploymentCondition, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_DeploymentCondition_To_v1beta1_DeploymentCondition(in, out, s)
}

func autoConvert_v1beta1_DeploymentList_To_apps_DeploymentList(in *apiextensionsv1beta1.DeploymentList, out *pkgapisapps.DeploymentList, s apimachinerypkgconversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]pkgapisapps.Deployment, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_Deployment_To_apps_Deployment(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta1_DeploymentList_To_apps_DeploymentList is an autogenerated conversion function.
func Convert_v1beta1_DeploymentList_To_apps_DeploymentList(in *apiextensionsv1beta1.DeploymentList, out *pkgapisapps.DeploymentList, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_DeploymentList_To_apps_DeploymentList(in, out, s)
}

func autoConvert_apps_DeploymentList_To_v1beta1_DeploymentList(in *pkgapisapps.DeploymentList, out *apiextensionsv1beta1.DeploymentList, s apimachinerypkgconversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]apiextensionsv1beta1.Deployment, len(*in))
		for i := range *in {
			if err := Convert_apps_Deployment_To_v1beta1_Deployment(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_apps_DeploymentList_To_v1beta1_DeploymentList is an autogenerated conversion function.
func Convert_apps_DeploymentList_To_v1beta1_DeploymentList(in *pkgapisapps.DeploymentList, out *apiextensionsv1beta1.DeploymentList, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_DeploymentList_To_v1beta1_DeploymentList(in, out, s)
}

func autoConvert_v1beta1_DeploymentRollback_To_apps_DeploymentRollback(in *apiextensionsv1beta1.DeploymentRollback, out *pkgapisapps.DeploymentRollback, s apimachinerypkgconversion.Scope) error {
	out.Name = in.Name
	out.UpdatedAnnotations = *(*map[string]string)(unsafe.Pointer(&in.UpdatedAnnotations))
	if err := Convert_v1beta1_RollbackConfig_To_apps_RollbackConfig(&in.RollbackTo, &out.RollbackTo, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_DeploymentRollback_To_apps_DeploymentRollback is an autogenerated conversion function.
func Convert_v1beta1_DeploymentRollback_To_apps_DeploymentRollback(in *apiextensionsv1beta1.DeploymentRollback, out *pkgapisapps.DeploymentRollback, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_DeploymentRollback_To_apps_DeploymentRollback(in, out, s)
}

func autoConvert_apps_DeploymentRollback_To_v1beta1_DeploymentRollback(in *pkgapisapps.DeploymentRollback, out *apiextensionsv1beta1.DeploymentRollback, s apimachinerypkgconversion.Scope) error {
	out.Name = in.Name
	out.UpdatedAnnotations = *(*map[string]string)(unsafe.Pointer(&in.UpdatedAnnotations))
	if err := Convert_apps_RollbackConfig_To_v1beta1_RollbackConfig(&in.RollbackTo, &out.RollbackTo, s); err != nil {
		return err
	}
	return nil
}

// Convert_apps_DeploymentRollback_To_v1beta1_DeploymentRollback is an autogenerated conversion function.
func Convert_apps_DeploymentRollback_To_v1beta1_DeploymentRollback(in *pkgapisapps.DeploymentRollback, out *apiextensionsv1beta1.DeploymentRollback, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_DeploymentRollback_To_v1beta1_DeploymentRollback(in, out, s)
}

func autoConvert_v1beta1_DeploymentSpec_To_apps_DeploymentSpec(in *apiextensionsv1beta1.DeploymentSpec, out *pkgapisapps.DeploymentSpec, s apimachinerypkgconversion.Scope) error {
	if err := apismetav1.Convert_Pointer_int32_To_int32(&in.Replicas, &out.Replicas, s); err != nil {
		return err
	}
	out.Selector = (*apismetav1.LabelSelector)(unsafe.Pointer(in.Selector))
	if err := apiscorev1.Convert_v1_PodTemplateSpec_To_core_PodTemplateSpec(&in.Template, &out.Template, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_DeploymentStrategy_To_apps_DeploymentStrategy(&in.Strategy, &out.Strategy, s); err != nil {
		return err
	}
	out.MinReadySeconds = in.MinReadySeconds
	out.RevisionHistoryLimit = (*int32)(unsafe.Pointer(in.RevisionHistoryLimit))
	out.Paused = in.Paused
	out.RollbackTo = (*pkgapisapps.RollbackConfig)(unsafe.Pointer(in.RollbackTo))
	out.ProgressDeadlineSeconds = (*int32)(unsafe.Pointer(in.ProgressDeadlineSeconds))
	return nil
}

// Convert_v1beta1_DeploymentSpec_To_apps_DeploymentSpec is an autogenerated conversion function.
func Convert_v1beta1_DeploymentSpec_To_apps_DeploymentSpec(in *apiextensionsv1beta1.DeploymentSpec, out *pkgapisapps.DeploymentSpec, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_DeploymentSpec_To_apps_DeploymentSpec(in, out, s)
}

func autoConvert_apps_DeploymentSpec_To_v1beta1_DeploymentSpec(in *pkgapisapps.DeploymentSpec, out *apiextensionsv1beta1.DeploymentSpec, s apimachinerypkgconversion.Scope) error {
	if err := apismetav1.Convert_int32_To_Pointer_int32(&in.Replicas, &out.Replicas, s); err != nil {
		return err
	}
	out.Selector = (*apismetav1.LabelSelector)(unsafe.Pointer(in.Selector))
	if err := apiscorev1.Convert_core_PodTemplateSpec_To_v1_PodTemplateSpec(&in.Template, &out.Template, s); err != nil {
		return err
	}
	if err := Convert_apps_DeploymentStrategy_To_v1beta1_DeploymentStrategy(&in.Strategy, &out.Strategy, s); err != nil {
		return err
	}
	out.MinReadySeconds = in.MinReadySeconds
	out.RevisionHistoryLimit = (*int32)(unsafe.Pointer(in.RevisionHistoryLimit))
	out.Paused = in.Paused
	out.RollbackTo = (*apiextensionsv1beta1.RollbackConfig)(unsafe.Pointer(in.RollbackTo))
	out.ProgressDeadlineSeconds = (*int32)(unsafe.Pointer(in.ProgressDeadlineSeconds))
	return nil
}

// Convert_apps_DeploymentSpec_To_v1beta1_DeploymentSpec is an autogenerated conversion function.
func Convert_apps_DeploymentSpec_To_v1beta1_DeploymentSpec(in *pkgapisapps.DeploymentSpec, out *apiextensionsv1beta1.DeploymentSpec, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_DeploymentSpec_To_v1beta1_DeploymentSpec(in, out, s)
}

func autoConvert_v1beta1_DeploymentStatus_To_apps_DeploymentStatus(in *apiextensionsv1beta1.DeploymentStatus, out *pkgapisapps.DeploymentStatus, s apimachinerypkgconversion.Scope) error {
	out.ObservedGeneration = in.ObservedGeneration
	out.Replicas = in.Replicas
	out.UpdatedReplicas = in.UpdatedReplicas
	out.ReadyReplicas = in.ReadyReplicas
	out.AvailableReplicas = in.AvailableReplicas
	out.UnavailableReplicas = in.UnavailableReplicas
	out.Conditions = *(*[]pkgapisapps.DeploymentCondition)(unsafe.Pointer(&in.Conditions))
	out.CollisionCount = (*int32)(unsafe.Pointer(in.CollisionCount))
	return nil
}

// Convert_v1beta1_DeploymentStatus_To_apps_DeploymentStatus is an autogenerated conversion function.
func Convert_v1beta1_DeploymentStatus_To_apps_DeploymentStatus(in *apiextensionsv1beta1.DeploymentStatus, out *pkgapisapps.DeploymentStatus, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_DeploymentStatus_To_apps_DeploymentStatus(in, out, s)
}

func autoConvert_apps_DeploymentStatus_To_v1beta1_DeploymentStatus(in *pkgapisapps.DeploymentStatus, out *apiextensionsv1beta1.DeploymentStatus, s apimachinerypkgconversion.Scope) error {
	out.ObservedGeneration = in.ObservedGeneration
	out.Replicas = in.Replicas
	out.UpdatedReplicas = in.UpdatedReplicas
	out.ReadyReplicas = in.ReadyReplicas
	out.AvailableReplicas = in.AvailableReplicas
	out.UnavailableReplicas = in.UnavailableReplicas
	out.Conditions = *(*[]apiextensionsv1beta1.DeploymentCondition)(unsafe.Pointer(&in.Conditions))
	out.CollisionCount = (*int32)(unsafe.Pointer(in.CollisionCount))
	return nil
}

// Convert_apps_DeploymentStatus_To_v1beta1_DeploymentStatus is an autogenerated conversion function.
func Convert_apps_DeploymentStatus_To_v1beta1_DeploymentStatus(in *pkgapisapps.DeploymentStatus, out *apiextensionsv1beta1.DeploymentStatus, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_DeploymentStatus_To_v1beta1_DeploymentStatus(in, out, s)
}

func autoConvert_v1beta1_DeploymentStrategy_To_apps_DeploymentStrategy(in *apiextensionsv1beta1.DeploymentStrategy, out *pkgapisapps.DeploymentStrategy, s apimachinerypkgconversion.Scope) error {
	out.Type = pkgapisapps.DeploymentStrategyType(in.Type)
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = new(pkgapisapps.RollingUpdateDeployment)
		if err := Convert_v1beta1_RollingUpdateDeployment_To_apps_RollingUpdateDeployment(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.RollingUpdate = nil
	}
	return nil
}

// Convert_v1beta1_DeploymentStrategy_To_apps_DeploymentStrategy is an autogenerated conversion function.
func Convert_v1beta1_DeploymentStrategy_To_apps_DeploymentStrategy(in *apiextensionsv1beta1.DeploymentStrategy, out *pkgapisapps.DeploymentStrategy, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_DeploymentStrategy_To_apps_DeploymentStrategy(in, out, s)
}

func autoConvert_apps_DeploymentStrategy_To_v1beta1_DeploymentStrategy(in *pkgapisapps.DeploymentStrategy, out *apiextensionsv1beta1.DeploymentStrategy, s apimachinerypkgconversion.Scope) error {
	out.Type = apiextensionsv1beta1.DeploymentStrategyType(in.Type)
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = new(apiextensionsv1beta1.RollingUpdateDeployment)
		if err := Convert_apps_RollingUpdateDeployment_To_v1beta1_RollingUpdateDeployment(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.RollingUpdate = nil
	}
	return nil
}

// Convert_apps_DeploymentStrategy_To_v1beta1_DeploymentStrategy is an autogenerated conversion function.
func Convert_apps_DeploymentStrategy_To_v1beta1_DeploymentStrategy(in *pkgapisapps.DeploymentStrategy, out *apiextensionsv1beta1.DeploymentStrategy, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_DeploymentStrategy_To_v1beta1_DeploymentStrategy(in, out, s)
}

func autoConvert_v1beta1_FSGroupStrategyOptions_To_policy_FSGroupStrategyOptions(in *apiextensionsv1beta1.FSGroupStrategyOptions, out *pkgapispolicy.FSGroupStrategyOptions, s apimachinerypkgconversion.Scope) error {
	out.Rule = pkgapispolicy.FSGroupStrategyType(in.Rule)
	out.Ranges = *(*[]pkgapispolicy.IDRange)(unsafe.Pointer(&in.Ranges))
	return nil
}

// Convert_v1beta1_FSGroupStrategyOptions_To_policy_FSGroupStrategyOptions is an autogenerated conversion function.
func Convert_v1beta1_FSGroupStrategyOptions_To_policy_FSGroupStrategyOptions(in *apiextensionsv1beta1.FSGroupStrategyOptions, out *pkgapispolicy.FSGroupStrategyOptions, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_FSGroupStrategyOptions_To_policy_FSGroupStrategyOptions(in, out, s)
}

func autoConvert_policy_FSGroupStrategyOptions_To_v1beta1_FSGroupStrategyOptions(in *pkgapispolicy.FSGroupStrategyOptions, out *apiextensionsv1beta1.FSGroupStrategyOptions, s apimachinerypkgconversion.Scope) error {
	out.Rule = apiextensionsv1beta1.FSGroupStrategyType(in.Rule)
	out.Ranges = *(*[]apiextensionsv1beta1.IDRange)(unsafe.Pointer(&in.Ranges))
	return nil
}

// Convert_policy_FSGroupStrategyOptions_To_v1beta1_FSGroupStrategyOptions is an autogenerated conversion function.
func Convert_policy_FSGroupStrategyOptions_To_v1beta1_FSGroupStrategyOptions(in *pkgapispolicy.FSGroupStrategyOptions, out *apiextensionsv1beta1.FSGroupStrategyOptions, s apimachinerypkgconversion.Scope) error {
	return autoConvert_policy_FSGroupStrategyOptions_To_v1beta1_FSGroupStrategyOptions(in, out, s)
}

func autoConvert_v1beta1_HTTPIngressPath_To_networking_HTTPIngressPath(in *apiextensionsv1beta1.HTTPIngressPath, out *pkgapisnetworking.HTTPIngressPath, s apimachinerypkgconversion.Scope) error {
	out.Path = in.Path
	out.PathType = (*pkgapisnetworking.PathType)(unsafe.Pointer(in.PathType))
	if err := Convert_v1beta1_IngressBackend_To_networking_IngressBackend(&in.Backend, &out.Backend, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_HTTPIngressPath_To_networking_HTTPIngressPath is an autogenerated conversion function.
func Convert_v1beta1_HTTPIngressPath_To_networking_HTTPIngressPath(in *apiextensionsv1beta1.HTTPIngressPath, out *pkgapisnetworking.HTTPIngressPath, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_HTTPIngressPath_To_networking_HTTPIngressPath(in, out, s)
}

func autoConvert_networking_HTTPIngressPath_To_v1beta1_HTTPIngressPath(in *pkgapisnetworking.HTTPIngressPath, out *apiextensionsv1beta1.HTTPIngressPath, s apimachinerypkgconversion.Scope) error {
	out.Path = in.Path
	out.PathType = (*apiextensionsv1beta1.PathType)(unsafe.Pointer(in.PathType))
	if err := Convert_networking_IngressBackend_To_v1beta1_IngressBackend(&in.Backend, &out.Backend, s); err != nil {
		return err
	}
	return nil
}

// Convert_networking_HTTPIngressPath_To_v1beta1_HTTPIngressPath is an autogenerated conversion function.
func Convert_networking_HTTPIngressPath_To_v1beta1_HTTPIngressPath(in *pkgapisnetworking.HTTPIngressPath, out *apiextensionsv1beta1.HTTPIngressPath, s apimachinerypkgconversion.Scope) error {
	return autoConvert_networking_HTTPIngressPath_To_v1beta1_HTTPIngressPath(in, out, s)
}

func autoConvert_v1beta1_HTTPIngressRuleValue_To_networking_HTTPIngressRuleValue(in *apiextensionsv1beta1.HTTPIngressRuleValue, out *pkgapisnetworking.HTTPIngressRuleValue, s apimachinerypkgconversion.Scope) error {
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]pkgapisnetworking.HTTPIngressPath, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_HTTPIngressPath_To_networking_HTTPIngressPath(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Paths = nil
	}
	return nil
}

// Convert_v1beta1_HTTPIngressRuleValue_To_networking_HTTPIngressRuleValue is an autogenerated conversion function.
func Convert_v1beta1_HTTPIngressRuleValue_To_networking_HTTPIngressRuleValue(in *apiextensionsv1beta1.HTTPIngressRuleValue, out *pkgapisnetworking.HTTPIngressRuleValue, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_HTTPIngressRuleValue_To_networking_HTTPIngressRuleValue(in, out, s)
}

func autoConvert_networking_HTTPIngressRuleValue_To_v1beta1_HTTPIngressRuleValue(in *pkgapisnetworking.HTTPIngressRuleValue, out *apiextensionsv1beta1.HTTPIngressRuleValue, s apimachinerypkgconversion.Scope) error {
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]apiextensionsv1beta1.HTTPIngressPath, len(*in))
		for i := range *in {
			if err := Convert_networking_HTTPIngressPath_To_v1beta1_HTTPIngressPath(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Paths = nil
	}
	return nil
}

// Convert_networking_HTTPIngressRuleValue_To_v1beta1_HTTPIngressRuleValue is an autogenerated conversion function.
func Convert_networking_HTTPIngressRuleValue_To_v1beta1_HTTPIngressRuleValue(in *pkgapisnetworking.HTTPIngressRuleValue, out *apiextensionsv1beta1.HTTPIngressRuleValue, s apimachinerypkgconversion.Scope) error {
	return autoConvert_networking_HTTPIngressRuleValue_To_v1beta1_HTTPIngressRuleValue(in, out, s)
}

func autoConvert_v1beta1_HostPortRange_To_policy_HostPortRange(in *apiextensionsv1beta1.HostPortRange, out *pkgapispolicy.HostPortRange, s apimachinerypkgconversion.Scope) error {
	out.Min = in.Min
	out.Max = in.Max
	return nil
}

// Convert_v1beta1_HostPortRange_To_policy_HostPortRange is an autogenerated conversion function.
func Convert_v1beta1_HostPortRange_To_policy_HostPortRange(in *apiextensionsv1beta1.HostPortRange, out *pkgapispolicy.HostPortRange, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_HostPortRange_To_policy_HostPortRange(in, out, s)
}

func autoConvert_policy_HostPortRange_To_v1beta1_HostPortRange(in *pkgapispolicy.HostPortRange, out *apiextensionsv1beta1.HostPortRange, s apimachinerypkgconversion.Scope) error {
	out.Min = in.Min
	out.Max = in.Max
	return nil
}

// Convert_policy_HostPortRange_To_v1beta1_HostPortRange is an autogenerated conversion function.
func Convert_policy_HostPortRange_To_v1beta1_HostPortRange(in *pkgapispolicy.HostPortRange, out *apiextensionsv1beta1.HostPortRange, s apimachinerypkgconversion.Scope) error {
	return autoConvert_policy_HostPortRange_To_v1beta1_HostPortRange(in, out, s)
}

func autoConvert_v1beta1_IDRange_To_policy_IDRange(in *apiextensionsv1beta1.IDRange, out *pkgapispolicy.IDRange, s apimachinerypkgconversion.Scope) error {
	out.Min = in.Min
	out.Max = in.Max
	return nil
}

// Convert_v1beta1_IDRange_To_policy_IDRange is an autogenerated conversion function.
func Convert_v1beta1_IDRange_To_policy_IDRange(in *apiextensionsv1beta1.IDRange, out *pkgapispolicy.IDRange, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_IDRange_To_policy_IDRange(in, out, s)
}

func autoConvert_policy_IDRange_To_v1beta1_IDRange(in *pkgapispolicy.IDRange, out *apiextensionsv1beta1.IDRange, s apimachinerypkgconversion.Scope) error {
	out.Min = in.Min
	out.Max = in.Max
	return nil
}

// Convert_policy_IDRange_To_v1beta1_IDRange is an autogenerated conversion function.
func Convert_policy_IDRange_To_v1beta1_IDRange(in *pkgapispolicy.IDRange, out *apiextensionsv1beta1.IDRange, s apimachinerypkgconversion.Scope) error {
	return autoConvert_policy_IDRange_To_v1beta1_IDRange(in, out, s)
}

func autoConvert_v1beta1_IPBlock_To_networking_IPBlock(in *apiextensionsv1beta1.IPBlock, out *pkgapisnetworking.IPBlock, s apimachinerypkgconversion.Scope) error {
	out.CIDR = in.CIDR
	out.Except = *(*[]string)(unsafe.Pointer(&in.Except))
	return nil
}

func autoConvert_networking_IPBlock_To_v1beta1_IPBlock(in *pkgapisnetworking.IPBlock, out *apiextensionsv1beta1.IPBlock, s apimachinerypkgconversion.Scope) error {
	out.CIDR = in.CIDR
	out.Except = *(*[]string)(unsafe.Pointer(&in.Except))
	return nil
}

func autoConvert_v1beta1_Ingress_To_networking_Ingress(in *apiextensionsv1beta1.Ingress, out *pkgapisnetworking.Ingress, s apimachinerypkgconversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_IngressSpec_To_networking_IngressSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_IngressStatus_To_networking_IngressStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_Ingress_To_networking_Ingress is an autogenerated conversion function.
func Convert_v1beta1_Ingress_To_networking_Ingress(in *apiextensionsv1beta1.Ingress, out *pkgapisnetworking.Ingress, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_Ingress_To_networking_Ingress(in, out, s)
}

func autoConvert_networking_Ingress_To_v1beta1_Ingress(in *pkgapisnetworking.Ingress, out *apiextensionsv1beta1.Ingress, s apimachinerypkgconversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_networking_IngressSpec_To_v1beta1_IngressSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_networking_IngressStatus_To_v1beta1_IngressStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_networking_Ingress_To_v1beta1_Ingress is an autogenerated conversion function.
func Convert_networking_Ingress_To_v1beta1_Ingress(in *pkgapisnetworking.Ingress, out *apiextensionsv1beta1.Ingress, s apimachinerypkgconversion.Scope) error {
	return autoConvert_networking_Ingress_To_v1beta1_Ingress(in, out, s)
}

func autoConvert_v1beta1_IngressBackend_To_networking_IngressBackend(in *apiextensionsv1beta1.IngressBackend, out *pkgapisnetworking.IngressBackend, s apimachinerypkgconversion.Scope) error {
	// WARNING: in.ServiceName requires manual conversion: does not exist in peer-type
	// WARNING: in.ServicePort requires manual conversion: does not exist in peer-type
	out.Resource = (*pkgapiscore.TypedLocalObjectReference)(unsafe.Pointer(in.Resource))
	return nil
}

func autoConvert_networking_IngressBackend_To_v1beta1_IngressBackend(in *pkgapisnetworking.IngressBackend, out *apiextensionsv1beta1.IngressBackend, s apimachinerypkgconversion.Scope) error {
	// WARNING: in.Service requires manual conversion: does not exist in peer-type
	out.Resource = (*apicorev1.TypedLocalObjectReference)(unsafe.Pointer(in.Resource))
	return nil
}

func autoConvert_v1beta1_IngressList_To_networking_IngressList(in *apiextensionsv1beta1.IngressList, out *pkgapisnetworking.IngressList, s apimachinerypkgconversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]pkgapisnetworking.Ingress, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_Ingress_To_networking_Ingress(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta1_IngressList_To_networking_IngressList is an autogenerated conversion function.
func Convert_v1beta1_IngressList_To_networking_IngressList(in *apiextensionsv1beta1.IngressList, out *pkgapisnetworking.IngressList, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_IngressList_To_networking_IngressList(in, out, s)
}

func autoConvert_networking_IngressList_To_v1beta1_IngressList(in *pkgapisnetworking.IngressList, out *apiextensionsv1beta1.IngressList, s apimachinerypkgconversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]apiextensionsv1beta1.Ingress, len(*in))
		for i := range *in {
			if err := Convert_networking_Ingress_To_v1beta1_Ingress(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_networking_IngressList_To_v1beta1_IngressList is an autogenerated conversion function.
func Convert_networking_IngressList_To_v1beta1_IngressList(in *pkgapisnetworking.IngressList, out *apiextensionsv1beta1.IngressList, s apimachinerypkgconversion.Scope) error {
	return autoConvert_networking_IngressList_To_v1beta1_IngressList(in, out, s)
}

func autoConvert_v1beta1_IngressRule_To_networking_IngressRule(in *apiextensionsv1beta1.IngressRule, out *pkgapisnetworking.IngressRule, s apimachinerypkgconversion.Scope) error {
	out.Host = in.Host
	if err := Convert_v1beta1_IngressRuleValue_To_networking_IngressRuleValue(&in.IngressRuleValue, &out.IngressRuleValue, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_IngressRule_To_networking_IngressRule is an autogenerated conversion function.
func Convert_v1beta1_IngressRule_To_networking_IngressRule(in *apiextensionsv1beta1.IngressRule, out *pkgapisnetworking.IngressRule, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_IngressRule_To_networking_IngressRule(in, out, s)
}

func autoConvert_networking_IngressRule_To_v1beta1_IngressRule(in *pkgapisnetworking.IngressRule, out *apiextensionsv1beta1.IngressRule, s apimachinerypkgconversion.Scope) error {
	out.Host = in.Host
	if err := Convert_networking_IngressRuleValue_To_v1beta1_IngressRuleValue(&in.IngressRuleValue, &out.IngressRuleValue, s); err != nil {
		return err
	}
	return nil
}

// Convert_networking_IngressRule_To_v1beta1_IngressRule is an autogenerated conversion function.
func Convert_networking_IngressRule_To_v1beta1_IngressRule(in *pkgapisnetworking.IngressRule, out *apiextensionsv1beta1.IngressRule, s apimachinerypkgconversion.Scope) error {
	return autoConvert_networking_IngressRule_To_v1beta1_IngressRule(in, out, s)
}

func autoConvert_v1beta1_IngressRuleValue_To_networking_IngressRuleValue(in *apiextensionsv1beta1.IngressRuleValue, out *pkgapisnetworking.IngressRuleValue, s apimachinerypkgconversion.Scope) error {
	if in.HTTP != nil {
		in, out := &in.HTTP, &out.HTTP
		*out = new(pkgapisnetworking.HTTPIngressRuleValue)
		if err := Convert_v1beta1_HTTPIngressRuleValue_To_networking_HTTPIngressRuleValue(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.HTTP = nil
	}
	return nil
}

// Convert_v1beta1_IngressRuleValue_To_networking_IngressRuleValue is an autogenerated conversion function.
func Convert_v1beta1_IngressRuleValue_To_networking_IngressRuleValue(in *apiextensionsv1beta1.IngressRuleValue, out *pkgapisnetworking.IngressRuleValue, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_IngressRuleValue_To_networking_IngressRuleValue(in, out, s)
}

func autoConvert_networking_IngressRuleValue_To_v1beta1_IngressRuleValue(in *pkgapisnetworking.IngressRuleValue, out *apiextensionsv1beta1.IngressRuleValue, s apimachinerypkgconversion.Scope) error {
	if in.HTTP != nil {
		in, out := &in.HTTP, &out.HTTP
		*out = new(apiextensionsv1beta1.HTTPIngressRuleValue)
		if err := Convert_networking_HTTPIngressRuleValue_To_v1beta1_HTTPIngressRuleValue(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.HTTP = nil
	}
	return nil
}

// Convert_networking_IngressRuleValue_To_v1beta1_IngressRuleValue is an autogenerated conversion function.
func Convert_networking_IngressRuleValue_To_v1beta1_IngressRuleValue(in *pkgapisnetworking.IngressRuleValue, out *apiextensionsv1beta1.IngressRuleValue, s apimachinerypkgconversion.Scope) error {
	return autoConvert_networking_IngressRuleValue_To_v1beta1_IngressRuleValue(in, out, s)
}

func autoConvert_v1beta1_IngressSpec_To_networking_IngressSpec(in *apiextensionsv1beta1.IngressSpec, out *pkgapisnetworking.IngressSpec, s apimachinerypkgconversion.Scope) error {
	out.IngressClassName = (*string)(unsafe.Pointer(in.IngressClassName))
	// WARNING: in.Backend requires manual conversion: does not exist in peer-type
	out.TLS = *(*[]pkgapisnetworking.IngressTLS)(unsafe.Pointer(&in.TLS))
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]pkgapisnetworking.IngressRule, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_IngressRule_To_networking_IngressRule(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Rules = nil
	}
	return nil
}

func autoConvert_networking_IngressSpec_To_v1beta1_IngressSpec(in *pkgapisnetworking.IngressSpec, out *apiextensionsv1beta1.IngressSpec, s apimachinerypkgconversion.Scope) error {
	out.IngressClassName = (*string)(unsafe.Pointer(in.IngressClassName))
	// WARNING: in.DefaultBackend requires manual conversion: does not exist in peer-type
	out.TLS = *(*[]apiextensionsv1beta1.IngressTLS)(unsafe.Pointer(&in.TLS))
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]apiextensionsv1beta1.IngressRule, len(*in))
		for i := range *in {
			if err := Convert_networking_IngressRule_To_v1beta1_IngressRule(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Rules = nil
	}
	return nil
}

func autoConvert_v1beta1_IngressStatus_To_networking_IngressStatus(in *apiextensionsv1beta1.IngressStatus, out *pkgapisnetworking.IngressStatus, s apimachinerypkgconversion.Scope) error {
	if err := apiscorev1.Convert_v1_LoadBalancerStatus_To_core_LoadBalancerStatus(&in.LoadBalancer, &out.LoadBalancer, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_IngressStatus_To_networking_IngressStatus is an autogenerated conversion function.
func Convert_v1beta1_IngressStatus_To_networking_IngressStatus(in *apiextensionsv1beta1.IngressStatus, out *pkgapisnetworking.IngressStatus, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_IngressStatus_To_networking_IngressStatus(in, out, s)
}

func autoConvert_networking_IngressStatus_To_v1beta1_IngressStatus(in *pkgapisnetworking.IngressStatus, out *apiextensionsv1beta1.IngressStatus, s apimachinerypkgconversion.Scope) error {
	if err := apiscorev1.Convert_core_LoadBalancerStatus_To_v1_LoadBalancerStatus(&in.LoadBalancer, &out.LoadBalancer, s); err != nil {
		return err
	}
	return nil
}

// Convert_networking_IngressStatus_To_v1beta1_IngressStatus is an autogenerated conversion function.
func Convert_networking_IngressStatus_To_v1beta1_IngressStatus(in *pkgapisnetworking.IngressStatus, out *apiextensionsv1beta1.IngressStatus, s apimachinerypkgconversion.Scope) error {
	return autoConvert_networking_IngressStatus_To_v1beta1_IngressStatus(in, out, s)
}

func autoConvert_v1beta1_IngressTLS_To_networking_IngressTLS(in *apiextensionsv1beta1.IngressTLS, out *pkgapisnetworking.IngressTLS, s apimachinerypkgconversion.Scope) error {
	out.Hosts = *(*[]string)(unsafe.Pointer(&in.Hosts))
	out.SecretName = in.SecretName
	return nil
}

// Convert_v1beta1_IngressTLS_To_networking_IngressTLS is an autogenerated conversion function.
func Convert_v1beta1_IngressTLS_To_networking_IngressTLS(in *apiextensionsv1beta1.IngressTLS, out *pkgapisnetworking.IngressTLS, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_IngressTLS_To_networking_IngressTLS(in, out, s)
}

func autoConvert_networking_IngressTLS_To_v1beta1_IngressTLS(in *pkgapisnetworking.IngressTLS, out *apiextensionsv1beta1.IngressTLS, s apimachinerypkgconversion.Scope) error {
	out.Hosts = *(*[]string)(unsafe.Pointer(&in.Hosts))
	out.SecretName = in.SecretName
	return nil
}

// Convert_networking_IngressTLS_To_v1beta1_IngressTLS is an autogenerated conversion function.
func Convert_networking_IngressTLS_To_v1beta1_IngressTLS(in *pkgapisnetworking.IngressTLS, out *apiextensionsv1beta1.IngressTLS, s apimachinerypkgconversion.Scope) error {
	return autoConvert_networking_IngressTLS_To_v1beta1_IngressTLS(in, out, s)
}

func autoConvert_v1beta1_NetworkPolicy_To_networking_NetworkPolicy(in *apiextensionsv1beta1.NetworkPolicy, out *pkgapisnetworking.NetworkPolicy, s apimachinerypkgconversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_NetworkPolicySpec_To_networking_NetworkPolicySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_NetworkPolicyStatus_To_networking_NetworkPolicyStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_NetworkPolicy_To_networking_NetworkPolicy is an autogenerated conversion function.
func Convert_v1beta1_NetworkPolicy_To_networking_NetworkPolicy(in *apiextensionsv1beta1.NetworkPolicy, out *pkgapisnetworking.NetworkPolicy, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_NetworkPolicy_To_networking_NetworkPolicy(in, out, s)
}

func autoConvert_networking_NetworkPolicy_To_v1beta1_NetworkPolicy(in *pkgapisnetworking.NetworkPolicy, out *apiextensionsv1beta1.NetworkPolicy, s apimachinerypkgconversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_networking_NetworkPolicySpec_To_v1beta1_NetworkPolicySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_networking_NetworkPolicyStatus_To_v1beta1_NetworkPolicyStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_networking_NetworkPolicy_To_v1beta1_NetworkPolicy is an autogenerated conversion function.
func Convert_networking_NetworkPolicy_To_v1beta1_NetworkPolicy(in *pkgapisnetworking.NetworkPolicy, out *apiextensionsv1beta1.NetworkPolicy, s apimachinerypkgconversion.Scope) error {
	return autoConvert_networking_NetworkPolicy_To_v1beta1_NetworkPolicy(in, out, s)
}

func autoConvert_v1beta1_NetworkPolicyEgressRule_To_networking_NetworkPolicyEgressRule(in *apiextensionsv1beta1.NetworkPolicyEgressRule, out *pkgapisnetworking.NetworkPolicyEgressRule, s apimachinerypkgconversion.Scope) error {
	out.Ports = *(*[]pkgapisnetworking.NetworkPolicyPort)(unsafe.Pointer(&in.Ports))
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = make([]pkgapisnetworking.NetworkPolicyPeer, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_NetworkPolicyPeer_To_networking_NetworkPolicyPeer(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.To = nil
	}
	return nil
}

func autoConvert_networking_NetworkPolicyEgressRule_To_v1beta1_NetworkPolicyEgressRule(in *pkgapisnetworking.NetworkPolicyEgressRule, out *apiextensionsv1beta1.NetworkPolicyEgressRule, s apimachinerypkgconversion.Scope) error {
	out.Ports = *(*[]apiextensionsv1beta1.NetworkPolicyPort)(unsafe.Pointer(&in.Ports))
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = make([]apiextensionsv1beta1.NetworkPolicyPeer, len(*in))
		for i := range *in {
			if err := Convert_networking_NetworkPolicyPeer_To_v1beta1_NetworkPolicyPeer(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.To = nil
	}
	return nil
}

func autoConvert_v1beta1_NetworkPolicyIngressRule_To_networking_NetworkPolicyIngressRule(in *apiextensionsv1beta1.NetworkPolicyIngressRule, out *pkgapisnetworking.NetworkPolicyIngressRule, s apimachinerypkgconversion.Scope) error {
	out.Ports = *(*[]pkgapisnetworking.NetworkPolicyPort)(unsafe.Pointer(&in.Ports))
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = make([]pkgapisnetworking.NetworkPolicyPeer, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_NetworkPolicyPeer_To_networking_NetworkPolicyPeer(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.From = nil
	}
	return nil
}

func autoConvert_networking_NetworkPolicyIngressRule_To_v1beta1_NetworkPolicyIngressRule(in *pkgapisnetworking.NetworkPolicyIngressRule, out *apiextensionsv1beta1.NetworkPolicyIngressRule, s apimachinerypkgconversion.Scope) error {
	out.Ports = *(*[]apiextensionsv1beta1.NetworkPolicyPort)(unsafe.Pointer(&in.Ports))
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = make([]apiextensionsv1beta1.NetworkPolicyPeer, len(*in))
		for i := range *in {
			if err := Convert_networking_NetworkPolicyPeer_To_v1beta1_NetworkPolicyPeer(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.From = nil
	}
	return nil
}

func autoConvert_v1beta1_NetworkPolicyList_To_networking_NetworkPolicyList(in *apiextensionsv1beta1.NetworkPolicyList, out *pkgapisnetworking.NetworkPolicyList, s apimachinerypkgconversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]pkgapisnetworking.NetworkPolicy, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_NetworkPolicy_To_networking_NetworkPolicy(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta1_NetworkPolicyList_To_networking_NetworkPolicyList is an autogenerated conversion function.
func Convert_v1beta1_NetworkPolicyList_To_networking_NetworkPolicyList(in *apiextensionsv1beta1.NetworkPolicyList, out *pkgapisnetworking.NetworkPolicyList, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_NetworkPolicyList_To_networking_NetworkPolicyList(in, out, s)
}

func autoConvert_networking_NetworkPolicyList_To_v1beta1_NetworkPolicyList(in *pkgapisnetworking.NetworkPolicyList, out *apiextensionsv1beta1.NetworkPolicyList, s apimachinerypkgconversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]apiextensionsv1beta1.NetworkPolicy, len(*in))
		for i := range *in {
			if err := Convert_networking_NetworkPolicy_To_v1beta1_NetworkPolicy(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_networking_NetworkPolicyList_To_v1beta1_NetworkPolicyList is an autogenerated conversion function.
func Convert_networking_NetworkPolicyList_To_v1beta1_NetworkPolicyList(in *pkgapisnetworking.NetworkPolicyList, out *apiextensionsv1beta1.NetworkPolicyList, s apimachinerypkgconversion.Scope) error {
	return autoConvert_networking_NetworkPolicyList_To_v1beta1_NetworkPolicyList(in, out, s)
}

func autoConvert_v1beta1_NetworkPolicyPeer_To_networking_NetworkPolicyPeer(in *apiextensionsv1beta1.NetworkPolicyPeer, out *pkgapisnetworking.NetworkPolicyPeer, s apimachinerypkgconversion.Scope) error {
	out.PodSelector = (*apismetav1.LabelSelector)(unsafe.Pointer(in.PodSelector))
	out.NamespaceSelector = (*apismetav1.LabelSelector)(unsafe.Pointer(in.NamespaceSelector))
	if in.IPBlock != nil {
		in, out := &in.IPBlock, &out.IPBlock
		*out = new(pkgapisnetworking.IPBlock)
		if err := Convert_v1beta1_IPBlock_To_networking_IPBlock(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.IPBlock = nil
	}
	return nil
}

// Convert_v1beta1_NetworkPolicyPeer_To_networking_NetworkPolicyPeer is an autogenerated conversion function.
func Convert_v1beta1_NetworkPolicyPeer_To_networking_NetworkPolicyPeer(in *apiextensionsv1beta1.NetworkPolicyPeer, out *pkgapisnetworking.NetworkPolicyPeer, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_NetworkPolicyPeer_To_networking_NetworkPolicyPeer(in, out, s)
}

func autoConvert_networking_NetworkPolicyPeer_To_v1beta1_NetworkPolicyPeer(in *pkgapisnetworking.NetworkPolicyPeer, out *apiextensionsv1beta1.NetworkPolicyPeer, s apimachinerypkgconversion.Scope) error {
	out.PodSelector = (*apismetav1.LabelSelector)(unsafe.Pointer(in.PodSelector))
	out.NamespaceSelector = (*apismetav1.LabelSelector)(unsafe.Pointer(in.NamespaceSelector))
	if in.IPBlock != nil {
		in, out := &in.IPBlock, &out.IPBlock
		*out = new(apiextensionsv1beta1.IPBlock)
		if err := Convert_networking_IPBlock_To_v1beta1_IPBlock(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.IPBlock = nil
	}
	return nil
}

// Convert_networking_NetworkPolicyPeer_To_v1beta1_NetworkPolicyPeer is an autogenerated conversion function.
func Convert_networking_NetworkPolicyPeer_To_v1beta1_NetworkPolicyPeer(in *pkgapisnetworking.NetworkPolicyPeer, out *apiextensionsv1beta1.NetworkPolicyPeer, s apimachinerypkgconversion.Scope) error {
	return autoConvert_networking_NetworkPolicyPeer_To_v1beta1_NetworkPolicyPeer(in, out, s)
}

func autoConvert_v1beta1_NetworkPolicyPort_To_networking_NetworkPolicyPort(in *apiextensionsv1beta1.NetworkPolicyPort, out *pkgapisnetworking.NetworkPolicyPort, s apimachinerypkgconversion.Scope) error {
	out.Protocol = (*pkgapiscore.Protocol)(unsafe.Pointer(in.Protocol))
	out.Port = (*pkgutilintstr.IntOrString)(unsafe.Pointer(in.Port))
	out.EndPort = (*int32)(unsafe.Pointer(in.EndPort))
	return nil
}

// Convert_v1beta1_NetworkPolicyPort_To_networking_NetworkPolicyPort is an autogenerated conversion function.
func Convert_v1beta1_NetworkPolicyPort_To_networking_NetworkPolicyPort(in *apiextensionsv1beta1.NetworkPolicyPort, out *pkgapisnetworking.NetworkPolicyPort, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_NetworkPolicyPort_To_networking_NetworkPolicyPort(in, out, s)
}

func autoConvert_networking_NetworkPolicyPort_To_v1beta1_NetworkPolicyPort(in *pkgapisnetworking.NetworkPolicyPort, out *apiextensionsv1beta1.NetworkPolicyPort, s apimachinerypkgconversion.Scope) error {
	out.Protocol = (*apicorev1.Protocol)(unsafe.Pointer(in.Protocol))
	out.Port = (*pkgutilintstr.IntOrString)(unsafe.Pointer(in.Port))
	out.EndPort = (*int32)(unsafe.Pointer(in.EndPort))
	return nil
}

// Convert_networking_NetworkPolicyPort_To_v1beta1_NetworkPolicyPort is an autogenerated conversion function.
func Convert_networking_NetworkPolicyPort_To_v1beta1_NetworkPolicyPort(in *pkgapisnetworking.NetworkPolicyPort, out *apiextensionsv1beta1.NetworkPolicyPort, s apimachinerypkgconversion.Scope) error {
	return autoConvert_networking_NetworkPolicyPort_To_v1beta1_NetworkPolicyPort(in, out, s)
}

func autoConvert_v1beta1_NetworkPolicySpec_To_networking_NetworkPolicySpec(in *apiextensionsv1beta1.NetworkPolicySpec, out *pkgapisnetworking.NetworkPolicySpec, s apimachinerypkgconversion.Scope) error {
	out.PodSelector = in.PodSelector
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = make([]pkgapisnetworking.NetworkPolicyIngressRule, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_NetworkPolicyIngressRule_To_networking_NetworkPolicyIngressRule(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Ingress = nil
	}
	if in.Egress != nil {
		in, out := &in.Egress, &out.Egress
		*out = make([]pkgapisnetworking.NetworkPolicyEgressRule, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_NetworkPolicyEgressRule_To_networking_NetworkPolicyEgressRule(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Egress = nil
	}
	out.PolicyTypes = *(*[]pkgapisnetworking.PolicyType)(unsafe.Pointer(&in.PolicyTypes))
	return nil
}

func autoConvert_networking_NetworkPolicySpec_To_v1beta1_NetworkPolicySpec(in *pkgapisnetworking.NetworkPolicySpec, out *apiextensionsv1beta1.NetworkPolicySpec, s apimachinerypkgconversion.Scope) error {
	out.PodSelector = in.PodSelector
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = make([]apiextensionsv1beta1.NetworkPolicyIngressRule, len(*in))
		for i := range *in {
			if err := Convert_networking_NetworkPolicyIngressRule_To_v1beta1_NetworkPolicyIngressRule(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Ingress = nil
	}
	if in.Egress != nil {
		in, out := &in.Egress, &out.Egress
		*out = make([]apiextensionsv1beta1.NetworkPolicyEgressRule, len(*in))
		for i := range *in {
			if err := Convert_networking_NetworkPolicyEgressRule_To_v1beta1_NetworkPolicyEgressRule(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Egress = nil
	}
	out.PolicyTypes = *(*[]apiextensionsv1beta1.PolicyType)(unsafe.Pointer(&in.PolicyTypes))
	return nil
}

func autoConvert_v1beta1_NetworkPolicyStatus_To_networking_NetworkPolicyStatus(in *apiextensionsv1beta1.NetworkPolicyStatus, out *pkgapisnetworking.NetworkPolicyStatus, s apimachinerypkgconversion.Scope) error {
	out.Conditions = *(*[]apismetav1.Condition)(unsafe.Pointer(&in.Conditions))
	return nil
}

// Convert_v1beta1_NetworkPolicyStatus_To_networking_NetworkPolicyStatus is an autogenerated conversion function.
func Convert_v1beta1_NetworkPolicyStatus_To_networking_NetworkPolicyStatus(in *apiextensionsv1beta1.NetworkPolicyStatus, out *pkgapisnetworking.NetworkPolicyStatus, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_NetworkPolicyStatus_To_networking_NetworkPolicyStatus(in, out, s)
}

func autoConvert_networking_NetworkPolicyStatus_To_v1beta1_NetworkPolicyStatus(in *pkgapisnetworking.NetworkPolicyStatus, out *apiextensionsv1beta1.NetworkPolicyStatus, s apimachinerypkgconversion.Scope) error {
	out.Conditions = *(*[]apismetav1.Condition)(unsafe.Pointer(&in.Conditions))
	return nil
}

// Convert_networking_NetworkPolicyStatus_To_v1beta1_NetworkPolicyStatus is an autogenerated conversion function.
func Convert_networking_NetworkPolicyStatus_To_v1beta1_NetworkPolicyStatus(in *pkgapisnetworking.NetworkPolicyStatus, out *apiextensionsv1beta1.NetworkPolicyStatus, s apimachinerypkgconversion.Scope) error {
	return autoConvert_networking_NetworkPolicyStatus_To_v1beta1_NetworkPolicyStatus(in, out, s)
}

func autoConvert_v1beta1_PodSecurityPolicy_To_policy_PodSecurityPolicy(in *apiextensionsv1beta1.PodSecurityPolicy, out *pkgapispolicy.PodSecurityPolicy, s apimachinerypkgconversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_PodSecurityPolicySpec_To_policy_PodSecurityPolicySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_PodSecurityPolicy_To_policy_PodSecurityPolicy is an autogenerated conversion function.
func Convert_v1beta1_PodSecurityPolicy_To_policy_PodSecurityPolicy(in *apiextensionsv1beta1.PodSecurityPolicy, out *pkgapispolicy.PodSecurityPolicy, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_PodSecurityPolicy_To_policy_PodSecurityPolicy(in, out, s)
}

func autoConvert_policy_PodSecurityPolicy_To_v1beta1_PodSecurityPolicy(in *pkgapispolicy.PodSecurityPolicy, out *apiextensionsv1beta1.PodSecurityPolicy, s apimachinerypkgconversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_policy_PodSecurityPolicySpec_To_v1beta1_PodSecurityPolicySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_policy_PodSecurityPolicy_To_v1beta1_PodSecurityPolicy is an autogenerated conversion function.
func Convert_policy_PodSecurityPolicy_To_v1beta1_PodSecurityPolicy(in *pkgapispolicy.PodSecurityPolicy, out *apiextensionsv1beta1.PodSecurityPolicy, s apimachinerypkgconversion.Scope) error {
	return autoConvert_policy_PodSecurityPolicy_To_v1beta1_PodSecurityPolicy(in, out, s)
}

func autoConvert_v1beta1_PodSecurityPolicyList_To_policy_PodSecurityPolicyList(in *apiextensionsv1beta1.PodSecurityPolicyList, out *pkgapispolicy.PodSecurityPolicyList, s apimachinerypkgconversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]pkgapispolicy.PodSecurityPolicy, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_PodSecurityPolicy_To_policy_PodSecurityPolicy(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta1_PodSecurityPolicyList_To_policy_PodSecurityPolicyList is an autogenerated conversion function.
func Convert_v1beta1_PodSecurityPolicyList_To_policy_PodSecurityPolicyList(in *apiextensionsv1beta1.PodSecurityPolicyList, out *pkgapispolicy.PodSecurityPolicyList, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_PodSecurityPolicyList_To_policy_PodSecurityPolicyList(in, out, s)
}

func autoConvert_policy_PodSecurityPolicyList_To_v1beta1_PodSecurityPolicyList(in *pkgapispolicy.PodSecurityPolicyList, out *apiextensionsv1beta1.PodSecurityPolicyList, s apimachinerypkgconversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]apiextensionsv1beta1.PodSecurityPolicy, len(*in))
		for i := range *in {
			if err := Convert_policy_PodSecurityPolicy_To_v1beta1_PodSecurityPolicy(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_policy_PodSecurityPolicyList_To_v1beta1_PodSecurityPolicyList is an autogenerated conversion function.
func Convert_policy_PodSecurityPolicyList_To_v1beta1_PodSecurityPolicyList(in *pkgapispolicy.PodSecurityPolicyList, out *apiextensionsv1beta1.PodSecurityPolicyList, s apimachinerypkgconversion.Scope) error {
	return autoConvert_policy_PodSecurityPolicyList_To_v1beta1_PodSecurityPolicyList(in, out, s)
}

func autoConvert_v1beta1_PodSecurityPolicySpec_To_policy_PodSecurityPolicySpec(in *apiextensionsv1beta1.PodSecurityPolicySpec, out *pkgapispolicy.PodSecurityPolicySpec, s apimachinerypkgconversion.Scope) error {
	out.Privileged = in.Privileged
	out.DefaultAddCapabilities = *(*[]pkgapiscore.Capability)(unsafe.Pointer(&in.DefaultAddCapabilities))
	out.RequiredDropCapabilities = *(*[]pkgapiscore.Capability)(unsafe.Pointer(&in.RequiredDropCapabilities))
	out.AllowedCapabilities = *(*[]pkgapiscore.Capability)(unsafe.Pointer(&in.AllowedCapabilities))
	out.Volumes = *(*[]pkgapispolicy.FSType)(unsafe.Pointer(&in.Volumes))
	out.HostNetwork = in.HostNetwork
	out.HostPorts = *(*[]pkgapispolicy.HostPortRange)(unsafe.Pointer(&in.HostPorts))
	out.HostPID = in.HostPID
	out.HostIPC = in.HostIPC
	if err := Convert_v1beta1_SELinuxStrategyOptions_To_policy_SELinuxStrategyOptions(&in.SELinux, &out.SELinux, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_RunAsUserStrategyOptions_To_policy_RunAsUserStrategyOptions(&in.RunAsUser, &out.RunAsUser, s); err != nil {
		return err
	}
	out.RunAsGroup = (*pkgapispolicy.RunAsGroupStrategyOptions)(unsafe.Pointer(in.RunAsGroup))
	if err := Convert_v1beta1_SupplementalGroupsStrategyOptions_To_policy_SupplementalGroupsStrategyOptions(&in.SupplementalGroups, &out.SupplementalGroups, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_FSGroupStrategyOptions_To_policy_FSGroupStrategyOptions(&in.FSGroup, &out.FSGroup, s); err != nil {
		return err
	}
	out.ReadOnlyRootFilesystem = in.ReadOnlyRootFilesystem
	out.DefaultAllowPrivilegeEscalation = (*bool)(unsafe.Pointer(in.DefaultAllowPrivilegeEscalation))
	if err := apismetav1.Convert_Pointer_bool_To_bool(&in.AllowPrivilegeEscalation, &out.AllowPrivilegeEscalation, s); err != nil {
		return err
	}
	out.AllowedHostPaths = *(*[]pkgapispolicy.AllowedHostPath)(unsafe.Pointer(&in.AllowedHostPaths))
	out.AllowedFlexVolumes = *(*[]pkgapispolicy.AllowedFlexVolume)(unsafe.Pointer(&in.AllowedFlexVolumes))
	out.AllowedCSIDrivers = *(*[]pkgapispolicy.AllowedCSIDriver)(unsafe.Pointer(&in.AllowedCSIDrivers))
	out.AllowedUnsafeSysctls = *(*[]string)(unsafe.Pointer(&in.AllowedUnsafeSysctls))
	out.ForbiddenSysctls = *(*[]string)(unsafe.Pointer(&in.ForbiddenSysctls))
	out.AllowedProcMountTypes = *(*[]pkgapiscore.ProcMountType)(unsafe.Pointer(&in.AllowedProcMountTypes))
	out.RuntimeClass = (*pkgapispolicy.RuntimeClassStrategyOptions)(unsafe.Pointer(in.RuntimeClass))
	return nil
}

// Convert_v1beta1_PodSecurityPolicySpec_To_policy_PodSecurityPolicySpec is an autogenerated conversion function.
func Convert_v1beta1_PodSecurityPolicySpec_To_policy_PodSecurityPolicySpec(in *apiextensionsv1beta1.PodSecurityPolicySpec, out *pkgapispolicy.PodSecurityPolicySpec, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_PodSecurityPolicySpec_To_policy_PodSecurityPolicySpec(in, out, s)
}

func autoConvert_policy_PodSecurityPolicySpec_To_v1beta1_PodSecurityPolicySpec(in *pkgapispolicy.PodSecurityPolicySpec, out *apiextensionsv1beta1.PodSecurityPolicySpec, s apimachinerypkgconversion.Scope) error {
	out.Privileged = in.Privileged
	out.DefaultAddCapabilities = *(*[]apicorev1.Capability)(unsafe.Pointer(&in.DefaultAddCapabilities))
	out.RequiredDropCapabilities = *(*[]apicorev1.Capability)(unsafe.Pointer(&in.RequiredDropCapabilities))
	out.AllowedCapabilities = *(*[]apicorev1.Capability)(unsafe.Pointer(&in.AllowedCapabilities))
	out.Volumes = *(*[]apiextensionsv1beta1.FSType)(unsafe.Pointer(&in.Volumes))
	out.HostNetwork = in.HostNetwork
	out.HostPorts = *(*[]apiextensionsv1beta1.HostPortRange)(unsafe.Pointer(&in.HostPorts))
	out.HostPID = in.HostPID
	out.HostIPC = in.HostIPC
	if err := Convert_policy_SELinuxStrategyOptions_To_v1beta1_SELinuxStrategyOptions(&in.SELinux, &out.SELinux, s); err != nil {
		return err
	}
	if err := Convert_policy_RunAsUserStrategyOptions_To_v1beta1_RunAsUserStrategyOptions(&in.RunAsUser, &out.RunAsUser, s); err != nil {
		return err
	}
	out.RunAsGroup = (*apiextensionsv1beta1.RunAsGroupStrategyOptions)(unsafe.Pointer(in.RunAsGroup))
	if err := Convert_policy_SupplementalGroupsStrategyOptions_To_v1beta1_SupplementalGroupsStrategyOptions(&in.SupplementalGroups, &out.SupplementalGroups, s); err != nil {
		return err
	}
	if err := Convert_policy_FSGroupStrategyOptions_To_v1beta1_FSGroupStrategyOptions(&in.FSGroup, &out.FSGroup, s); err != nil {
		return err
	}
	out.ReadOnlyRootFilesystem = in.ReadOnlyRootFilesystem
	out.DefaultAllowPrivilegeEscalation = (*bool)(unsafe.Pointer(in.DefaultAllowPrivilegeEscalation))
	if err := apismetav1.Convert_bool_To_Pointer_bool(&in.AllowPrivilegeEscalation, &out.AllowPrivilegeEscalation, s); err != nil {
		return err
	}
	out.AllowedHostPaths = *(*[]apiextensionsv1beta1.AllowedHostPath)(unsafe.Pointer(&in.AllowedHostPaths))
	out.AllowedFlexVolumes = *(*[]apiextensionsv1beta1.AllowedFlexVolume)(unsafe.Pointer(&in.AllowedFlexVolumes))
	out.AllowedCSIDrivers = *(*[]apiextensionsv1beta1.AllowedCSIDriver)(unsafe.Pointer(&in.AllowedCSIDrivers))
	out.AllowedUnsafeSysctls = *(*[]string)(unsafe.Pointer(&in.AllowedUnsafeSysctls))
	out.ForbiddenSysctls = *(*[]string)(unsafe.Pointer(&in.ForbiddenSysctls))
	out.AllowedProcMountTypes = *(*[]apicorev1.ProcMountType)(unsafe.Pointer(&in.AllowedProcMountTypes))
	out.RuntimeClass = (*apiextensionsv1beta1.RuntimeClassStrategyOptions)(unsafe.Pointer(in.RuntimeClass))
	return nil
}

// Convert_policy_PodSecurityPolicySpec_To_v1beta1_PodSecurityPolicySpec is an autogenerated conversion function.
func Convert_policy_PodSecurityPolicySpec_To_v1beta1_PodSecurityPolicySpec(in *pkgapispolicy.PodSecurityPolicySpec, out *apiextensionsv1beta1.PodSecurityPolicySpec, s apimachinerypkgconversion.Scope) error {
	return autoConvert_policy_PodSecurityPolicySpec_To_v1beta1_PodSecurityPolicySpec(in, out, s)
}

func autoConvert_v1beta1_ReplicaSet_To_apps_ReplicaSet(in *apiextensionsv1beta1.ReplicaSet, out *pkgapisapps.ReplicaSet, s apimachinerypkgconversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_ReplicaSetSpec_To_apps_ReplicaSetSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_ReplicaSetStatus_To_apps_ReplicaSetStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_ReplicaSet_To_apps_ReplicaSet is an autogenerated conversion function.
func Convert_v1beta1_ReplicaSet_To_apps_ReplicaSet(in *apiextensionsv1beta1.ReplicaSet, out *pkgapisapps.ReplicaSet, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_ReplicaSet_To_apps_ReplicaSet(in, out, s)
}

func autoConvert_apps_ReplicaSet_To_v1beta1_ReplicaSet(in *pkgapisapps.ReplicaSet, out *apiextensionsv1beta1.ReplicaSet, s apimachinerypkgconversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_apps_ReplicaSetSpec_To_v1beta1_ReplicaSetSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_apps_ReplicaSetStatus_To_v1beta1_ReplicaSetStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_apps_ReplicaSet_To_v1beta1_ReplicaSet is an autogenerated conversion function.
func Convert_apps_ReplicaSet_To_v1beta1_ReplicaSet(in *pkgapisapps.ReplicaSet, out *apiextensionsv1beta1.ReplicaSet, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_ReplicaSet_To_v1beta1_ReplicaSet(in, out, s)
}

func autoConvert_v1beta1_ReplicaSetCondition_To_apps_ReplicaSetCondition(in *apiextensionsv1beta1.ReplicaSetCondition, out *pkgapisapps.ReplicaSetCondition, s apimachinerypkgconversion.Scope) error {
	out.Type = pkgapisapps.ReplicaSetConditionType(in.Type)
	out.Status = pkgapiscore.ConditionStatus(in.Status)
	out.LastTransitionTime = in.LastTransitionTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

// Convert_v1beta1_ReplicaSetCondition_To_apps_ReplicaSetCondition is an autogenerated conversion function.
func Convert_v1beta1_ReplicaSetCondition_To_apps_ReplicaSetCondition(in *apiextensionsv1beta1.ReplicaSetCondition, out *pkgapisapps.ReplicaSetCondition, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_ReplicaSetCondition_To_apps_ReplicaSetCondition(in, out, s)
}

func autoConvert_apps_ReplicaSetCondition_To_v1beta1_ReplicaSetCondition(in *pkgapisapps.ReplicaSetCondition, out *apiextensionsv1beta1.ReplicaSetCondition, s apimachinerypkgconversion.Scope) error {
	out.Type = apiextensionsv1beta1.ReplicaSetConditionType(in.Type)
	out.Status = apicorev1.ConditionStatus(in.Status)
	out.LastTransitionTime = in.LastTransitionTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

// Convert_apps_ReplicaSetCondition_To_v1beta1_ReplicaSetCondition is an autogenerated conversion function.
func Convert_apps_ReplicaSetCondition_To_v1beta1_ReplicaSetCondition(in *pkgapisapps.ReplicaSetCondition, out *apiextensionsv1beta1.ReplicaSetCondition, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_ReplicaSetCondition_To_v1beta1_ReplicaSetCondition(in, out, s)
}

func autoConvert_v1beta1_ReplicaSetList_To_apps_ReplicaSetList(in *apiextensionsv1beta1.ReplicaSetList, out *pkgapisapps.ReplicaSetList, s apimachinerypkgconversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]pkgapisapps.ReplicaSet, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_ReplicaSet_To_apps_ReplicaSet(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta1_ReplicaSetList_To_apps_ReplicaSetList is an autogenerated conversion function.
func Convert_v1beta1_ReplicaSetList_To_apps_ReplicaSetList(in *apiextensionsv1beta1.ReplicaSetList, out *pkgapisapps.ReplicaSetList, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_ReplicaSetList_To_apps_ReplicaSetList(in, out, s)
}

func autoConvert_apps_ReplicaSetList_To_v1beta1_ReplicaSetList(in *pkgapisapps.ReplicaSetList, out *apiextensionsv1beta1.ReplicaSetList, s apimachinerypkgconversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]apiextensionsv1beta1.ReplicaSet, len(*in))
		for i := range *in {
			if err := Convert_apps_ReplicaSet_To_v1beta1_ReplicaSet(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_apps_ReplicaSetList_To_v1beta1_ReplicaSetList is an autogenerated conversion function.
func Convert_apps_ReplicaSetList_To_v1beta1_ReplicaSetList(in *pkgapisapps.ReplicaSetList, out *apiextensionsv1beta1.ReplicaSetList, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_ReplicaSetList_To_v1beta1_ReplicaSetList(in, out, s)
}

func autoConvert_v1beta1_ReplicaSetSpec_To_apps_ReplicaSetSpec(in *apiextensionsv1beta1.ReplicaSetSpec, out *pkgapisapps.ReplicaSetSpec, s apimachinerypkgconversion.Scope) error {
	if err := apismetav1.Convert_Pointer_int32_To_int32(&in.Replicas, &out.Replicas, s); err != nil {
		return err
	}
	out.MinReadySeconds = in.MinReadySeconds
	out.Selector = (*apismetav1.LabelSelector)(unsafe.Pointer(in.Selector))
	if err := apiscorev1.Convert_v1_PodTemplateSpec_To_core_PodTemplateSpec(&in.Template, &out.Template, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_ReplicaSetSpec_To_apps_ReplicaSetSpec is an autogenerated conversion function.
func Convert_v1beta1_ReplicaSetSpec_To_apps_ReplicaSetSpec(in *apiextensionsv1beta1.ReplicaSetSpec, out *pkgapisapps.ReplicaSetSpec, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_ReplicaSetSpec_To_apps_ReplicaSetSpec(in, out, s)
}

func autoConvert_apps_ReplicaSetSpec_To_v1beta1_ReplicaSetSpec(in *pkgapisapps.ReplicaSetSpec, out *apiextensionsv1beta1.ReplicaSetSpec, s apimachinerypkgconversion.Scope) error {
	if err := apismetav1.Convert_int32_To_Pointer_int32(&in.Replicas, &out.Replicas, s); err != nil {
		return err
	}
	out.MinReadySeconds = in.MinReadySeconds
	out.Selector = (*apismetav1.LabelSelector)(unsafe.Pointer(in.Selector))
	if err := apiscorev1.Convert_core_PodTemplateSpec_To_v1_PodTemplateSpec(&in.Template, &out.Template, s); err != nil {
		return err
	}
	return nil
}

// Convert_apps_ReplicaSetSpec_To_v1beta1_ReplicaSetSpec is an autogenerated conversion function.
func Convert_apps_ReplicaSetSpec_To_v1beta1_ReplicaSetSpec(in *pkgapisapps.ReplicaSetSpec, out *apiextensionsv1beta1.ReplicaSetSpec, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_ReplicaSetSpec_To_v1beta1_ReplicaSetSpec(in, out, s)
}

func autoConvert_v1beta1_ReplicaSetStatus_To_apps_ReplicaSetStatus(in *apiextensionsv1beta1.ReplicaSetStatus, out *pkgapisapps.ReplicaSetStatus, s apimachinerypkgconversion.Scope) error {
	out.Replicas = in.Replicas
	out.FullyLabeledReplicas = in.FullyLabeledReplicas
	out.ReadyReplicas = in.ReadyReplicas
	out.AvailableReplicas = in.AvailableReplicas
	out.ObservedGeneration = in.ObservedGeneration
	out.Conditions = *(*[]pkgapisapps.ReplicaSetCondition)(unsafe.Pointer(&in.Conditions))
	return nil
}

// Convert_v1beta1_ReplicaSetStatus_To_apps_ReplicaSetStatus is an autogenerated conversion function.
func Convert_v1beta1_ReplicaSetStatus_To_apps_ReplicaSetStatus(in *apiextensionsv1beta1.ReplicaSetStatus, out *pkgapisapps.ReplicaSetStatus, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_ReplicaSetStatus_To_apps_ReplicaSetStatus(in, out, s)
}

func autoConvert_apps_ReplicaSetStatus_To_v1beta1_ReplicaSetStatus(in *pkgapisapps.ReplicaSetStatus, out *apiextensionsv1beta1.ReplicaSetStatus, s apimachinerypkgconversion.Scope) error {
	out.Replicas = in.Replicas
	out.FullyLabeledReplicas = in.FullyLabeledReplicas
	out.ReadyReplicas = in.ReadyReplicas
	out.AvailableReplicas = in.AvailableReplicas
	out.ObservedGeneration = in.ObservedGeneration
	out.Conditions = *(*[]apiextensionsv1beta1.ReplicaSetCondition)(unsafe.Pointer(&in.Conditions))
	return nil
}

// Convert_apps_ReplicaSetStatus_To_v1beta1_ReplicaSetStatus is an autogenerated conversion function.
func Convert_apps_ReplicaSetStatus_To_v1beta1_ReplicaSetStatus(in *pkgapisapps.ReplicaSetStatus, out *apiextensionsv1beta1.ReplicaSetStatus, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_ReplicaSetStatus_To_v1beta1_ReplicaSetStatus(in, out, s)
}

func autoConvert_v1beta1_RollbackConfig_To_apps_RollbackConfig(in *apiextensionsv1beta1.RollbackConfig, out *pkgapisapps.RollbackConfig, s apimachinerypkgconversion.Scope) error {
	out.Revision = in.Revision
	return nil
}

// Convert_v1beta1_RollbackConfig_To_apps_RollbackConfig is an autogenerated conversion function.
func Convert_v1beta1_RollbackConfig_To_apps_RollbackConfig(in *apiextensionsv1beta1.RollbackConfig, out *pkgapisapps.RollbackConfig, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_RollbackConfig_To_apps_RollbackConfig(in, out, s)
}

func autoConvert_apps_RollbackConfig_To_v1beta1_RollbackConfig(in *pkgapisapps.RollbackConfig, out *apiextensionsv1beta1.RollbackConfig, s apimachinerypkgconversion.Scope) error {
	out.Revision = in.Revision
	return nil
}

// Convert_apps_RollbackConfig_To_v1beta1_RollbackConfig is an autogenerated conversion function.
func Convert_apps_RollbackConfig_To_v1beta1_RollbackConfig(in *pkgapisapps.RollbackConfig, out *apiextensionsv1beta1.RollbackConfig, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_RollbackConfig_To_v1beta1_RollbackConfig(in, out, s)
}

func autoConvert_v1beta1_RollingUpdateDaemonSet_To_apps_RollingUpdateDaemonSet(in *apiextensionsv1beta1.RollingUpdateDaemonSet, out *pkgapisapps.RollingUpdateDaemonSet, s apimachinerypkgconversion.Scope) error {
	if err := apismetav1.Convert_Pointer_intstr_IntOrString_To_intstr_IntOrString(&in.MaxUnavailable, &out.MaxUnavailable, s); err != nil {
		return err
	}
	if err := apismetav1.Convert_Pointer_intstr_IntOrString_To_intstr_IntOrString(&in.MaxSurge, &out.MaxSurge, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_RollingUpdateDaemonSet_To_apps_RollingUpdateDaemonSet is an autogenerated conversion function.
func Convert_v1beta1_RollingUpdateDaemonSet_To_apps_RollingUpdateDaemonSet(in *apiextensionsv1beta1.RollingUpdateDaemonSet, out *pkgapisapps.RollingUpdateDaemonSet, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_RollingUpdateDaemonSet_To_apps_RollingUpdateDaemonSet(in, out, s)
}

func autoConvert_apps_RollingUpdateDaemonSet_To_v1beta1_RollingUpdateDaemonSet(in *pkgapisapps.RollingUpdateDaemonSet, out *apiextensionsv1beta1.RollingUpdateDaemonSet, s apimachinerypkgconversion.Scope) error {
	if err := apismetav1.Convert_intstr_IntOrString_To_Pointer_intstr_IntOrString(&in.MaxUnavailable, &out.MaxUnavailable, s); err != nil {
		return err
	}
	if err := apismetav1.Convert_intstr_IntOrString_To_Pointer_intstr_IntOrString(&in.MaxSurge, &out.MaxSurge, s); err != nil {
		return err
	}
	return nil
}

// Convert_apps_RollingUpdateDaemonSet_To_v1beta1_RollingUpdateDaemonSet is an autogenerated conversion function.
func Convert_apps_RollingUpdateDaemonSet_To_v1beta1_RollingUpdateDaemonSet(in *pkgapisapps.RollingUpdateDaemonSet, out *apiextensionsv1beta1.RollingUpdateDaemonSet, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_RollingUpdateDaemonSet_To_v1beta1_RollingUpdateDaemonSet(in, out, s)
}

func autoConvert_v1beta1_RollingUpdateDeployment_To_apps_RollingUpdateDeployment(in *apiextensionsv1beta1.RollingUpdateDeployment, out *pkgapisapps.RollingUpdateDeployment, s apimachinerypkgconversion.Scope) error {
	if err := apismetav1.Convert_Pointer_intstr_IntOrString_To_intstr_IntOrString(&in.MaxUnavailable, &out.MaxUnavailable, s); err != nil {
		return err
	}
	if err := apismetav1.Convert_Pointer_intstr_IntOrString_To_intstr_IntOrString(&in.MaxSurge, &out.MaxSurge, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_RollingUpdateDeployment_To_apps_RollingUpdateDeployment is an autogenerated conversion function.
func Convert_v1beta1_RollingUpdateDeployment_To_apps_RollingUpdateDeployment(in *apiextensionsv1beta1.RollingUpdateDeployment, out *pkgapisapps.RollingUpdateDeployment, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_RollingUpdateDeployment_To_apps_RollingUpdateDeployment(in, out, s)
}

func autoConvert_apps_RollingUpdateDeployment_To_v1beta1_RollingUpdateDeployment(in *pkgapisapps.RollingUpdateDeployment, out *apiextensionsv1beta1.RollingUpdateDeployment, s apimachinerypkgconversion.Scope) error {
	if err := apismetav1.Convert_intstr_IntOrString_To_Pointer_intstr_IntOrString(&in.MaxUnavailable, &out.MaxUnavailable, s); err != nil {
		return err
	}
	if err := apismetav1.Convert_intstr_IntOrString_To_Pointer_intstr_IntOrString(&in.MaxSurge, &out.MaxSurge, s); err != nil {
		return err
	}
	return nil
}

// Convert_apps_RollingUpdateDeployment_To_v1beta1_RollingUpdateDeployment is an autogenerated conversion function.
func Convert_apps_RollingUpdateDeployment_To_v1beta1_RollingUpdateDeployment(in *pkgapisapps.RollingUpdateDeployment, out *apiextensionsv1beta1.RollingUpdateDeployment, s apimachinerypkgconversion.Scope) error {
	return autoConvert_apps_RollingUpdateDeployment_To_v1beta1_RollingUpdateDeployment(in, out, s)
}

func autoConvert_v1beta1_RunAsGroupStrategyOptions_To_policy_RunAsGroupStrategyOptions(in *apiextensionsv1beta1.RunAsGroupStrategyOptions, out *pkgapispolicy.RunAsGroupStrategyOptions, s apimachinerypkgconversion.Scope) error {
	out.Rule = pkgapispolicy.RunAsGroupStrategy(in.Rule)
	out.Ranges = *(*[]pkgapispolicy.IDRange)(unsafe.Pointer(&in.Ranges))
	return nil
}

// Convert_v1beta1_RunAsGroupStrategyOptions_To_policy_RunAsGroupStrategyOptions is an autogenerated conversion function.
func Convert_v1beta1_RunAsGroupStrategyOptions_To_policy_RunAsGroupStrategyOptions(in *apiextensionsv1beta1.RunAsGroupStrategyOptions, out *pkgapispolicy.RunAsGroupStrategyOptions, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_RunAsGroupStrategyOptions_To_policy_RunAsGroupStrategyOptions(in, out, s)
}

func autoConvert_policy_RunAsGroupStrategyOptions_To_v1beta1_RunAsGroupStrategyOptions(in *pkgapispolicy.RunAsGroupStrategyOptions, out *apiextensionsv1beta1.RunAsGroupStrategyOptions, s apimachinerypkgconversion.Scope) error {
	out.Rule = apiextensionsv1beta1.RunAsGroupStrategy(in.Rule)
	out.Ranges = *(*[]apiextensionsv1beta1.IDRange)(unsafe.Pointer(&in.Ranges))
	return nil
}

// Convert_policy_RunAsGroupStrategyOptions_To_v1beta1_RunAsGroupStrategyOptions is an autogenerated conversion function.
func Convert_policy_RunAsGroupStrategyOptions_To_v1beta1_RunAsGroupStrategyOptions(in *pkgapispolicy.RunAsGroupStrategyOptions, out *apiextensionsv1beta1.RunAsGroupStrategyOptions, s apimachinerypkgconversion.Scope) error {
	return autoConvert_policy_RunAsGroupStrategyOptions_To_v1beta1_RunAsGroupStrategyOptions(in, out, s)
}

func autoConvert_v1beta1_RunAsUserStrategyOptions_To_policy_RunAsUserStrategyOptions(in *apiextensionsv1beta1.RunAsUserStrategyOptions, out *pkgapispolicy.RunAsUserStrategyOptions, s apimachinerypkgconversion.Scope) error {
	out.Rule = pkgapispolicy.RunAsUserStrategy(in.Rule)
	out.Ranges = *(*[]pkgapispolicy.IDRange)(unsafe.Pointer(&in.Ranges))
	return nil
}

// Convert_v1beta1_RunAsUserStrategyOptions_To_policy_RunAsUserStrategyOptions is an autogenerated conversion function.
func Convert_v1beta1_RunAsUserStrategyOptions_To_policy_RunAsUserStrategyOptions(in *apiextensionsv1beta1.RunAsUserStrategyOptions, out *pkgapispolicy.RunAsUserStrategyOptions, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_RunAsUserStrategyOptions_To_policy_RunAsUserStrategyOptions(in, out, s)
}

func autoConvert_policy_RunAsUserStrategyOptions_To_v1beta1_RunAsUserStrategyOptions(in *pkgapispolicy.RunAsUserStrategyOptions, out *apiextensionsv1beta1.RunAsUserStrategyOptions, s apimachinerypkgconversion.Scope) error {
	out.Rule = apiextensionsv1beta1.RunAsUserStrategy(in.Rule)
	out.Ranges = *(*[]apiextensionsv1beta1.IDRange)(unsafe.Pointer(&in.Ranges))
	return nil
}

// Convert_policy_RunAsUserStrategyOptions_To_v1beta1_RunAsUserStrategyOptions is an autogenerated conversion function.
func Convert_policy_RunAsUserStrategyOptions_To_v1beta1_RunAsUserStrategyOptions(in *pkgapispolicy.RunAsUserStrategyOptions, out *apiextensionsv1beta1.RunAsUserStrategyOptions, s apimachinerypkgconversion.Scope) error {
	return autoConvert_policy_RunAsUserStrategyOptions_To_v1beta1_RunAsUserStrategyOptions(in, out, s)
}

func autoConvert_v1beta1_RuntimeClassStrategyOptions_To_policy_RuntimeClassStrategyOptions(in *apiextensionsv1beta1.RuntimeClassStrategyOptions, out *pkgapispolicy.RuntimeClassStrategyOptions, s apimachinerypkgconversion.Scope) error {
	out.AllowedRuntimeClassNames = *(*[]string)(unsafe.Pointer(&in.AllowedRuntimeClassNames))
	out.DefaultRuntimeClassName = (*string)(unsafe.Pointer(in.DefaultRuntimeClassName))
	return nil
}

// Convert_v1beta1_RuntimeClassStrategyOptions_To_policy_RuntimeClassStrategyOptions is an autogenerated conversion function.
func Convert_v1beta1_RuntimeClassStrategyOptions_To_policy_RuntimeClassStrategyOptions(in *apiextensionsv1beta1.RuntimeClassStrategyOptions, out *pkgapispolicy.RuntimeClassStrategyOptions, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_RuntimeClassStrategyOptions_To_policy_RuntimeClassStrategyOptions(in, out, s)
}

func autoConvert_policy_RuntimeClassStrategyOptions_To_v1beta1_RuntimeClassStrategyOptions(in *pkgapispolicy.RuntimeClassStrategyOptions, out *apiextensionsv1beta1.RuntimeClassStrategyOptions, s apimachinerypkgconversion.Scope) error {
	out.AllowedRuntimeClassNames = *(*[]string)(unsafe.Pointer(&in.AllowedRuntimeClassNames))
	out.DefaultRuntimeClassName = (*string)(unsafe.Pointer(in.DefaultRuntimeClassName))
	return nil
}

// Convert_policy_RuntimeClassStrategyOptions_To_v1beta1_RuntimeClassStrategyOptions is an autogenerated conversion function.
func Convert_policy_RuntimeClassStrategyOptions_To_v1beta1_RuntimeClassStrategyOptions(in *pkgapispolicy.RuntimeClassStrategyOptions, out *apiextensionsv1beta1.RuntimeClassStrategyOptions, s apimachinerypkgconversion.Scope) error {
	return autoConvert_policy_RuntimeClassStrategyOptions_To_v1beta1_RuntimeClassStrategyOptions(in, out, s)
}

func autoConvert_v1beta1_SELinuxStrategyOptions_To_policy_SELinuxStrategyOptions(in *apiextensionsv1beta1.SELinuxStrategyOptions, out *pkgapispolicy.SELinuxStrategyOptions, s apimachinerypkgconversion.Scope) error {
	out.Rule = pkgapispolicy.SELinuxStrategy(in.Rule)
	out.SELinuxOptions = (*pkgapiscore.SELinuxOptions)(unsafe.Pointer(in.SELinuxOptions))
	return nil
}

// Convert_v1beta1_SELinuxStrategyOptions_To_policy_SELinuxStrategyOptions is an autogenerated conversion function.
func Convert_v1beta1_SELinuxStrategyOptions_To_policy_SELinuxStrategyOptions(in *apiextensionsv1beta1.SELinuxStrategyOptions, out *pkgapispolicy.SELinuxStrategyOptions, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_SELinuxStrategyOptions_To_policy_SELinuxStrategyOptions(in, out, s)
}

func autoConvert_policy_SELinuxStrategyOptions_To_v1beta1_SELinuxStrategyOptions(in *pkgapispolicy.SELinuxStrategyOptions, out *apiextensionsv1beta1.SELinuxStrategyOptions, s apimachinerypkgconversion.Scope) error {
	out.Rule = apiextensionsv1beta1.SELinuxStrategy(in.Rule)
	out.SELinuxOptions = (*apicorev1.SELinuxOptions)(unsafe.Pointer(in.SELinuxOptions))
	return nil
}

// Convert_policy_SELinuxStrategyOptions_To_v1beta1_SELinuxStrategyOptions is an autogenerated conversion function.
func Convert_policy_SELinuxStrategyOptions_To_v1beta1_SELinuxStrategyOptions(in *pkgapispolicy.SELinuxStrategyOptions, out *apiextensionsv1beta1.SELinuxStrategyOptions, s apimachinerypkgconversion.Scope) error {
	return autoConvert_policy_SELinuxStrategyOptions_To_v1beta1_SELinuxStrategyOptions(in, out, s)
}

func autoConvert_v1beta1_Scale_To_autoscaling_Scale(in *apiextensionsv1beta1.Scale, out *pkgapisautoscaling.Scale, s apimachinerypkgconversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_ScaleSpec_To_autoscaling_ScaleSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_ScaleStatus_To_autoscaling_ScaleStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_Scale_To_autoscaling_Scale is an autogenerated conversion function.
func Convert_v1beta1_Scale_To_autoscaling_Scale(in *apiextensionsv1beta1.Scale, out *pkgapisautoscaling.Scale, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_Scale_To_autoscaling_Scale(in, out, s)
}

func autoConvert_autoscaling_Scale_To_v1beta1_Scale(in *pkgapisautoscaling.Scale, out *apiextensionsv1beta1.Scale, s apimachinerypkgconversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_autoscaling_ScaleSpec_To_v1beta1_ScaleSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_autoscaling_ScaleStatus_To_v1beta1_ScaleStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_autoscaling_Scale_To_v1beta1_Scale is an autogenerated conversion function.
func Convert_autoscaling_Scale_To_v1beta1_Scale(in *pkgapisautoscaling.Scale, out *apiextensionsv1beta1.Scale, s apimachinerypkgconversion.Scope) error {
	return autoConvert_autoscaling_Scale_To_v1beta1_Scale(in, out, s)
}

func autoConvert_v1beta1_ScaleSpec_To_autoscaling_ScaleSpec(in *apiextensionsv1beta1.ScaleSpec, out *pkgapisautoscaling.ScaleSpec, s apimachinerypkgconversion.Scope) error {
	out.Replicas = in.Replicas
	return nil
}

// Convert_v1beta1_ScaleSpec_To_autoscaling_ScaleSpec is an autogenerated conversion function.
func Convert_v1beta1_ScaleSpec_To_autoscaling_ScaleSpec(in *apiextensionsv1beta1.ScaleSpec, out *pkgapisautoscaling.ScaleSpec, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_ScaleSpec_To_autoscaling_ScaleSpec(in, out, s)
}

func autoConvert_autoscaling_ScaleSpec_To_v1beta1_ScaleSpec(in *pkgapisautoscaling.ScaleSpec, out *apiextensionsv1beta1.ScaleSpec, s apimachinerypkgconversion.Scope) error {
	out.Replicas = in.Replicas
	return nil
}

// Convert_autoscaling_ScaleSpec_To_v1beta1_ScaleSpec is an autogenerated conversion function.
func Convert_autoscaling_ScaleSpec_To_v1beta1_ScaleSpec(in *pkgapisautoscaling.ScaleSpec, out *apiextensionsv1beta1.ScaleSpec, s apimachinerypkgconversion.Scope) error {
	return autoConvert_autoscaling_ScaleSpec_To_v1beta1_ScaleSpec(in, out, s)
}

func autoConvert_v1beta1_ScaleStatus_To_autoscaling_ScaleStatus(in *apiextensionsv1beta1.ScaleStatus, out *pkgapisautoscaling.ScaleStatus, s apimachinerypkgconversion.Scope) error {
	out.Replicas = in.Replicas
	// WARNING: in.Selector requires manual conversion: inconvertible types (map[string]string vs string)
	// WARNING: in.TargetSelector requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_autoscaling_ScaleStatus_To_v1beta1_ScaleStatus(in *pkgapisautoscaling.ScaleStatus, out *apiextensionsv1beta1.ScaleStatus, s apimachinerypkgconversion.Scope) error {
	out.Replicas = in.Replicas
	// WARNING: in.Selector requires manual conversion: inconvertible types (string vs map[string]string)
	return nil
}

func autoConvert_v1beta1_SupplementalGroupsStrategyOptions_To_policy_SupplementalGroupsStrategyOptions(in *apiextensionsv1beta1.SupplementalGroupsStrategyOptions, out *pkgapispolicy.SupplementalGroupsStrategyOptions, s apimachinerypkgconversion.Scope) error {
	out.Rule = pkgapispolicy.SupplementalGroupsStrategyType(in.Rule)
	out.Ranges = *(*[]pkgapispolicy.IDRange)(unsafe.Pointer(&in.Ranges))
	return nil
}

// Convert_v1beta1_SupplementalGroupsStrategyOptions_To_policy_SupplementalGroupsStrategyOptions is an autogenerated conversion function.
func Convert_v1beta1_SupplementalGroupsStrategyOptions_To_policy_SupplementalGroupsStrategyOptions(in *apiextensionsv1beta1.SupplementalGroupsStrategyOptions, out *pkgapispolicy.SupplementalGroupsStrategyOptions, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1beta1_SupplementalGroupsStrategyOptions_To_policy_SupplementalGroupsStrategyOptions(in, out, s)
}

func autoConvert_policy_SupplementalGroupsStrategyOptions_To_v1beta1_SupplementalGroupsStrategyOptions(in *pkgapispolicy.SupplementalGroupsStrategyOptions, out *apiextensionsv1beta1.SupplementalGroupsStrategyOptions, s apimachinerypkgconversion.Scope) error {
	out.Rule = apiextensionsv1beta1.SupplementalGroupsStrategyType(in.Rule)
	out.Ranges = *(*[]apiextensionsv1beta1.IDRange)(unsafe.Pointer(&in.Ranges))
	return nil
}

// Convert_policy_SupplementalGroupsStrategyOptions_To_v1beta1_SupplementalGroupsStrategyOptions is an autogenerated conversion function.
func Convert_policy_SupplementalGroupsStrategyOptions_To_v1beta1_SupplementalGroupsStrategyOptions(in *pkgapispolicy.SupplementalGroupsStrategyOptions, out *apiextensionsv1beta1.SupplementalGroupsStrategyOptions, s apimachinerypkgconversion.Scope) error {
	return autoConvert_policy_SupplementalGroupsStrategyOptions_To_v1beta1_SupplementalGroupsStrategyOptions(in, out, s)
}
